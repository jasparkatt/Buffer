{
  "sourceType" : "module",
  "body" : [ {
    "specifiers" : [ {
      "local" : {
        "name" : "hasInterface",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../../hasInterface'",
      "raw" : "'../../../../../hasInterface'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "ItemVisitor",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../ItemVisitor'",
      "raw" : "'../ItemVisitor'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "AbstractNode",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'./AbstractNode'",
      "raw" : "'./AbstractNode'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "Interval",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'./Interval'",
      "raw" : "'./Interval'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "extend",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../../extend'",
      "raw" : "'../../../../../extend'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "Comparator",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../../java/util/Comparator'",
      "raw" : "'../../../../../java/util/Comparator'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "inherits",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../../inherits'",
      "raw" : "'../../../../../inherits'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "List",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../../java/util/List'",
      "raw" : "'../../../../../java/util/List'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "AbstractSTRtree",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'./AbstractSTRtree'",
      "raw" : "'./AbstractSTRtree'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "declaration" : {
      "id" : {
        "name" : "SIRtree",
        "type" : "Identifier"
      },
      "params" : [ ],
      "body" : {
        "body" : [ {
          "expression" : {
            "operator" : "=",
            "left" : {
              "object" : {
                "type" : "ThisExpression"
              },
              "property" : {
                "name" : "comparator",
                "type" : "Identifier"
              },
              "computed" : false,
              "type" : "MemberExpression"
            },
            "right" : {
              "properties" : [ {
                "key" : {
                  "name" : "interfaces_",
                  "type" : "Identifier"
                },
                "value" : {
                  "params" : [ ],
                  "body" : {
                    "body" : [ {
                      "argument" : {
                        "elements" : [ {
                          "name" : "Comparator",
                          "type" : "Identifier"
                        } ],
                        "type" : "ArrayExpression"
                      },
                      "type" : "ReturnStatement"
                    } ],
                    "type" : "BlockStatement"
                  },
                  "generator" : false,
                  "type" : "FunctionExpression"
                },
                "kind" : "init",
                "computed" : false,
                "method" : false,
                "shorthand" : false,
                "type" : "Property"
              }, {
                "key" : {
                  "name" : "compare",
                  "type" : "Identifier"
                },
                "value" : {
                  "params" : [ {
                    "name" : "o1",
                    "type" : "Identifier"
                  }, {
                    "name" : "o2",
                    "type" : "Identifier"
                  } ],
                  "body" : {
                    "body" : [ {
                      "argument" : {
                        "callee" : {
                          "object" : {
                            "name" : "AbstractSTRtree",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "compareDoubles",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "callee" : {
                            "object" : {
                              "callee" : {
                                "object" : {
                                  "name" : "o1",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "name" : "getBounds",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              },
                              "arguments" : [ ],
                              "type" : "CallExpression"
                            },
                            "property" : {
                              "name" : "getCentre",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ ],
                          "type" : "CallExpression"
                        }, {
                          "callee" : {
                            "object" : {
                              "callee" : {
                                "object" : {
                                  "name" : "o2",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "name" : "getBounds",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              },
                              "arguments" : [ ],
                              "type" : "CallExpression"
                            },
                            "property" : {
                              "name" : "getCentre",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ ],
                          "type" : "CallExpression"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "ReturnStatement"
                    } ],
                    "type" : "BlockStatement"
                  },
                  "generator" : false,
                  "type" : "FunctionExpression"
                },
                "kind" : "init",
                "computed" : false,
                "method" : false,
                "shorthand" : false,
                "type" : "Property"
              } ],
              "type" : "ObjectExpression"
            },
            "type" : "AssignmentExpression"
          },
          "type" : "ExpressionStatement"
        }, {
          "expression" : {
            "operator" : "=",
            "left" : {
              "object" : {
                "type" : "ThisExpression"
              },
              "property" : {
                "name" : "intersectsOp",
                "type" : "Identifier"
              },
              "computed" : false,
              "type" : "MemberExpression"
            },
            "right" : {
              "properties" : [ {
                "key" : {
                  "name" : "interfaces_",
                  "type" : "Identifier"
                },
                "value" : {
                  "params" : [ ],
                  "body" : {
                    "body" : [ {
                      "argument" : {
                        "elements" : [ {
                          "name" : "IntersectsOp",
                          "type" : "Identifier"
                        } ],
                        "type" : "ArrayExpression"
                      },
                      "type" : "ReturnStatement"
                    } ],
                    "type" : "BlockStatement"
                  },
                  "generator" : false,
                  "type" : "FunctionExpression"
                },
                "kind" : "init",
                "computed" : false,
                "method" : false,
                "shorthand" : false,
                "type" : "Property"
              }, {
                "key" : {
                  "name" : "intersects",
                  "type" : "Identifier"
                },
                "value" : {
                  "params" : [ {
                    "name" : "aBounds",
                    "type" : "Identifier"
                  }, {
                    "name" : "bBounds",
                    "type" : "Identifier"
                  } ],
                  "body" : {
                    "body" : [ {
                      "argument" : {
                        "callee" : {
                          "object" : {
                            "name" : "aBounds",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "intersects",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "name" : "bBounds",
                          "type" : "Identifier"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "ReturnStatement"
                    } ],
                    "type" : "BlockStatement"
                  },
                  "generator" : false,
                  "type" : "FunctionExpression"
                },
                "kind" : "init",
                "computed" : false,
                "method" : false,
                "shorthand" : false,
                "type" : "Property"
              } ],
              "type" : "ObjectExpression"
            },
            "type" : "AssignmentExpression"
          },
          "type" : "ExpressionStatement"
        }, {
          "test" : {
            "operator" : "===",
            "left" : {
              "name" : "arguments.length",
              "type" : "Identifier"
            },
            "right" : {
              "value" : 0,
              "raw" : "0",
              "type" : "Literal"
            },
            "type" : "BinaryExpression"
          },
          "consequent" : {
            "body" : [ {
              "expression" : {
                "callee" : {
                  "object" : {
                    "name" : "SIRtree",
                    "type" : "Identifier"
                  },
                  "property" : {
                    "name" : "call",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "arguments" : [ {
                  "type" : "ThisExpression"
                }, {
                  "value" : "10",
                  "raw" : "10",
                  "type" : "Literal"
                } ],
                "type" : "CallExpression"
              },
              "type" : "ExpressionStatement"
            } ],
            "type" : "BlockStatement"
          },
          "alternate" : {
            "test" : {
              "operator" : "===",
              "left" : {
                "name" : "arguments.length",
                "type" : "Identifier"
              },
              "right" : {
                "value" : 1,
                "raw" : "1",
                "type" : "Literal"
              },
              "type" : "BinaryExpression"
            },
            "consequent" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "nodeCapacity",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "object" : {
                      "name" : "arguments",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "value" : 0,
                      "raw" : "0",
                      "type" : "Literal"
                    },
                    "computed" : true,
                    "type" : "MemberExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "name" : "AbstractSTRtree",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "call",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "type" : "ThisExpression"
                  }, {
                    "name" : "nodeCapacity",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              } ],
              "type" : "BlockStatement"
            },
            "alternate" : null,
            "type" : "IfStatement"
          },
          "type" : "IfStatement"
        } ],
        "type" : "BlockStatement"
      },
      "generator" : false,
      "type" : "FunctionDeclaration"
    },
    "type" : "ExportDefaultDeclaration"
  }, {
    "expression" : {
      "callee" : {
        "name" : "inherits",
        "type" : "Identifier"
      },
      "arguments" : [ {
        "name" : "SIRtree",
        "type" : "Identifier"
      }, {
        "name" : "AbstractSTRtree",
        "type" : "Identifier"
      } ],
      "type" : "CallExpression"
    },
    "type" : "ExpressionStatement"
  }, {
    "expression" : {
      "callee" : {
        "name" : "extend",
        "type" : "Identifier"
      },
      "arguments" : [ {
        "object" : {
          "name" : "SIRtree",
          "type" : "Identifier"
        },
        "property" : {
          "name" : "prototype",
          "type" : "Identifier"
        },
        "computed" : false,
        "type" : "MemberExpression"
      }, {
        "properties" : [ {
          "key" : {
            "name" : "createNode",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "level",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "properties" : [ {
                    "key" : {
                      "name" : "computeBounds",
                      "type" : "Identifier"
                    },
                    "value" : {
                      "params" : [ ],
                      "body" : {
                        "body" : [ {
                          "declarations" : [ {
                            "id" : {
                              "name" : "bounds",
                              "type" : "Identifier"
                            },
                            "init" : {
                              "value" : null,
                              "raw" : "null",
                              "type" : "Literal"
                            },
                            "type" : "VariableDeclarator"
                          } ],
                          "kind" : "var",
                          "type" : "VariableDeclaration"
                        }, {
                          "init" : {
                            "declarations" : [ {
                              "id" : {
                                "name" : "i",
                                "type" : "Identifier"
                              },
                              "init" : {
                                "callee" : {
                                  "object" : {
                                    "callee" : {
                                      "object" : {
                                        "type" : "ThisExpression"
                                      },
                                      "property" : {
                                        "name" : "getChildBoundables",
                                        "type" : "Identifier"
                                      },
                                      "computed" : false,
                                      "type" : "MemberExpression"
                                    },
                                    "arguments" : [ ],
                                    "type" : "CallExpression"
                                  },
                                  "property" : {
                                    "name" : "iterator",
                                    "type" : "Identifier"
                                  },
                                  "computed" : false,
                                  "type" : "MemberExpression"
                                },
                                "arguments" : [ ],
                                "type" : "CallExpression"
                              },
                              "type" : "VariableDeclarator"
                            } ],
                            "kind" : "var",
                            "type" : "VariableDeclaration"
                          },
                          "test" : {
                            "callee" : {
                              "object" : {
                                "name" : "i",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "hasNext",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ ],
                            "type" : "CallExpression"
                          },
                          "update" : null,
                          "body" : {
                            "body" : [ {
                              "declarations" : [ {
                                "id" : {
                                  "name" : "childBoundable",
                                  "type" : "Identifier"
                                },
                                "init" : {
                                  "callee" : {
                                    "object" : {
                                      "name" : "i",
                                      "type" : "Identifier"
                                    },
                                    "property" : {
                                      "name" : "next",
                                      "type" : "Identifier"
                                    },
                                    "computed" : false,
                                    "type" : "MemberExpression"
                                  },
                                  "arguments" : [ ],
                                  "type" : "CallExpression"
                                },
                                "type" : "VariableDeclarator"
                              } ],
                              "kind" : "var",
                              "type" : "VariableDeclaration"
                            }, {
                              "test" : {
                                "operator" : "===",
                                "left" : {
                                  "name" : "bounds",
                                  "type" : "Identifier"
                                },
                                "right" : {
                                  "value" : null,
                                  "raw" : "null",
                                  "type" : "Literal"
                                },
                                "type" : "BinaryExpression"
                              },
                              "consequent" : {
                                "body" : [ {
                                  "expression" : {
                                    "operator" : "=",
                                    "left" : {
                                      "name" : "bounds",
                                      "type" : "Identifier"
                                    },
                                    "right" : {
                                      "callee" : {
                                        "name" : "Interval",
                                        "type" : "Identifier"
                                      },
                                      "arguments" : [ {
                                        "callee" : {
                                          "object" : {
                                            "name" : "childBoundable",
                                            "type" : "Identifier"
                                          },
                                          "property" : {
                                            "name" : "getBounds",
                                            "type" : "Identifier"
                                          },
                                          "computed" : false,
                                          "type" : "MemberExpression"
                                        },
                                        "arguments" : [ ],
                                        "type" : "CallExpression"
                                      } ],
                                      "type" : "NewExpression"
                                    },
                                    "type" : "AssignmentExpression"
                                  },
                                  "type" : "ExpressionStatement"
                                } ],
                                "type" : "BlockStatement"
                              },
                              "alternate" : {
                                "body" : [ {
                                  "expression" : {
                                    "callee" : {
                                      "object" : {
                                        "name" : "bounds",
                                        "type" : "Identifier"
                                      },
                                      "property" : {
                                        "name" : "expandToInclude",
                                        "type" : "Identifier"
                                      },
                                      "computed" : false,
                                      "type" : "MemberExpression"
                                    },
                                    "arguments" : [ {
                                      "callee" : {
                                        "object" : {
                                          "name" : "childBoundable",
                                          "type" : "Identifier"
                                        },
                                        "property" : {
                                          "name" : "getBounds",
                                          "type" : "Identifier"
                                        },
                                        "computed" : false,
                                        "type" : "MemberExpression"
                                      },
                                      "arguments" : [ ],
                                      "type" : "CallExpression"
                                    } ],
                                    "type" : "CallExpression"
                                  },
                                  "type" : "ExpressionStatement"
                                } ],
                                "type" : "BlockStatement"
                              },
                              "type" : "IfStatement"
                            } ],
                            "type" : "BlockStatement"
                          },
                          "type" : "ForStatement"
                        }, {
                          "argument" : {
                            "name" : "bounds",
                            "type" : "Identifier"
                          },
                          "type" : "ReturnStatement"
                        } ],
                        "type" : "BlockStatement"
                      },
                      "generator" : false,
                      "type" : "FunctionExpression"
                    },
                    "kind" : "init",
                    "computed" : false,
                    "method" : false,
                    "shorthand" : false,
                    "type" : "Property"
                  } ],
                  "type" : "ObjectExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "insert",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "test" : {
                  "operator" : "===",
                  "left" : {
                    "object" : {
                      "name" : "arguments",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "length",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : 3,
                    "raw" : "3",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "declarations" : [ {
                      "id" : {
                        "name" : "x1",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "object" : {
                          "name" : "arguments",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "value" : 0,
                          "raw" : "0",
                          "type" : "Literal"
                        },
                        "computed" : true,
                        "type" : "MemberExpression"
                      },
                      "type" : "VariableDeclarator"
                    }, {
                      "id" : {
                        "name" : "x2",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "object" : {
                          "name" : "arguments",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "value" : 1,
                          "raw" : "1",
                          "type" : "Literal"
                        },
                        "computed" : true,
                        "type" : "MemberExpression"
                      },
                      "type" : "VariableDeclarator"
                    }, {
                      "id" : {
                        "name" : "item",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "object" : {
                          "name" : "arguments",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "value" : 2,
                          "raw" : "2",
                          "type" : "Literal"
                        },
                        "computed" : true,
                        "type" : "MemberExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "object" : {
                            "object" : {
                              "name" : "AbstractSTRtree",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "prototype",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "property" : {
                            "name" : "insert",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "property" : {
                          "name" : "call",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "type" : "ThisExpression"
                      }, {
                        "callee" : {
                          "name" : "Interval",
                          "type" : "Identifier"
                        },
                        "arguments" : [ {
                          "callee" : {
                            "object" : {
                              "name" : "Math",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "min",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ {
                            "name" : "x1",
                            "type" : "Identifier"
                          }, {
                            "name" : "x2",
                            "type" : "Identifier"
                          } ],
                          "type" : "CallExpression"
                        }, {
                          "callee" : {
                            "object" : {
                              "name" : "Math",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "max",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ {
                            "name" : "x1",
                            "type" : "Identifier"
                          }, {
                            "name" : "x2",
                            "type" : "Identifier"
                          } ],
                          "type" : "CallExpression"
                        } ],
                        "type" : "NewExpression"
                      }, {
                        "name" : "item",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : {
                  "argument" : {
                    "object" : {
                      "object" : {
                        "name" : "AbstractSTRtree",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "prototype",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "property" : {
                      "callee" : {
                        "object" : {
                          "name" : "insert",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "apply",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "type" : "ThisExpression"
                      }, {
                        "name" : "arguments",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "type" : "ReturnStatement"
                },
                "type" : "IfStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "getIntersectsOp",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "intersectsOp",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "query",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "test" : {
                  "operator" : "===",
                  "left" : {
                    "name" : "arguments.length",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "value" : 1,
                    "raw" : "1",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "declarations" : [ {
                      "id" : {
                        "name" : "x",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "object" : {
                          "name" : "arguments",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "value" : 0,
                          "raw" : "0",
                          "type" : "Literal"
                        },
                        "computed" : true,
                        "type" : "MemberExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "argument" : {
                      "callee" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "query",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "x",
                        "type" : "Identifier"
                      }, {
                        "name" : "x",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ReturnStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : {
                  "test" : {
                    "operator" : "===",
                    "left" : {
                      "name" : "arguments.length",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "value" : 2,
                      "raw" : "2",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "consequent" : {
                    "body" : [ {
                      "declarations" : [ {
                        "id" : {
                          "name" : "x1",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "object" : {
                            "name" : "arguments",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "value" : 0,
                            "raw" : "0",
                            "type" : "Literal"
                          },
                          "computed" : true,
                          "type" : "MemberExpression"
                        },
                        "type" : "VariableDeclarator"
                      }, {
                        "id" : {
                          "name" : "x2",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "object" : {
                            "name" : "arguments",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "value" : 1,
                            "raw" : "1",
                            "type" : "Literal"
                          },
                          "computed" : true,
                          "type" : "MemberExpression"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    }, {
                      "argument" : {
                        "callee" : {
                          "object" : {
                            "object" : {
                              "object" : {
                                "name" : "AbstractSTRtree",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "prototype",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "property" : {
                              "name" : "query",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "property" : {
                            "name" : "call",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "type" : "ThisExpression"
                        }, {
                          "callee" : {
                            "name" : "Interval",
                            "type" : "Identifier"
                          },
                          "arguments" : [ {
                            "callee" : {
                              "object" : {
                                "name" : "Math",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "min",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ {
                              "name" : "x1",
                              "type" : "Identifier"
                            }, {
                              "name" : "x2",
                              "type" : "Identifier"
                            } ],
                            "type" : "CallExpression"
                          }, {
                            "callee" : {
                              "object" : {
                                "name" : "Math",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "max",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ {
                              "name" : "x1",
                              "type" : "Identifier"
                            }, {
                              "name" : "x2",
                              "type" : "Identifier"
                            } ],
                            "type" : "CallExpression"
                          } ],
                          "type" : "NewExpression"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "ReturnStatement"
                    } ],
                    "type" : "BlockStatement"
                  },
                  "alternate" : {
                    "test" : {
                      "operator" : "===",
                      "left" : {
                        "name" : "arguments.length",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "value" : 3,
                        "raw" : "3",
                        "type" : "Literal"
                      },
                      "type" : "BinaryExpression"
                    },
                    "consequent" : {
                      "body" : [ {
                        "test" : {
                          "operator" : "&&",
                          "left" : {
                            "callee" : {
                              "name" : "hasInterface",
                              "type" : "Identifier"
                            },
                            "arguments" : [ {
                              "object" : {
                                "name" : "arguments",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "value" : 2,
                                "raw" : "2",
                                "type" : "Literal"
                              },
                              "computed" : true,
                              "type" : "MemberExpression"
                            }, {
                              "name" : "ItemVisitor",
                              "type" : "Identifier"
                            } ],
                            "type" : "CallExpression"
                          },
                          "right" : {
                            "operator" : "&&",
                            "left" : {
                              "operator" : "instanceof",
                              "left" : {
                                "object" : {
                                  "name" : "arguments",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "value" : 0,
                                  "raw" : "0",
                                  "type" : "Literal"
                                },
                                "computed" : true,
                                "type" : "MemberExpression"
                              },
                              "right" : {
                                "name" : "Object",
                                "type" : "Identifier"
                              },
                              "type" : "BinaryExpression"
                            },
                            "right" : {
                              "operator" : "instanceof",
                              "left" : {
                                "object" : {
                                  "name" : "arguments",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "value" : 1,
                                  "raw" : "1",
                                  "type" : "Literal"
                                },
                                "computed" : true,
                                "type" : "MemberExpression"
                              },
                              "right" : {
                                "name" : "AbstractNode",
                                "type" : "Identifier"
                              },
                              "type" : "BinaryExpression"
                            },
                            "type" : "LogicalExpression"
                          },
                          "type" : "LogicalExpression"
                        },
                        "consequent" : {
                          "body" : [ {
                            "declarations" : [ {
                              "id" : {
                                "name" : "searchBounds",
                                "type" : "Identifier"
                              },
                              "init" : {
                                "object" : {
                                  "name" : "arguments",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "value" : 0,
                                  "raw" : "0",
                                  "type" : "Literal"
                                },
                                "computed" : true,
                                "type" : "MemberExpression"
                              },
                              "type" : "VariableDeclarator"
                            }, {
                              "id" : {
                                "name" : "node",
                                "type" : "Identifier"
                              },
                              "init" : {
                                "object" : {
                                  "name" : "arguments",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "value" : 1,
                                  "raw" : "1",
                                  "type" : "Literal"
                                },
                                "computed" : true,
                                "type" : "MemberExpression"
                              },
                              "type" : "VariableDeclarator"
                            }, {
                              "id" : {
                                "name" : "visitor",
                                "type" : "Identifier"
                              },
                              "init" : {
                                "object" : {
                                  "name" : "arguments",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "value" : 2,
                                  "raw" : "2",
                                  "type" : "Literal"
                                },
                                "computed" : true,
                                "type" : "MemberExpression"
                              },
                              "type" : "VariableDeclarator"
                            } ],
                            "kind" : "let",
                            "type" : "VariableDeclaration"
                          }, {
                            "expression" : {
                              "callee" : {
                                "object" : {
                                  "object" : {
                                    "object" : {
                                      "name" : "AbstractSTRtree",
                                      "type" : "Identifier"
                                    },
                                    "property" : {
                                      "name" : "prototype",
                                      "type" : "Identifier"
                                    },
                                    "computed" : false,
                                    "type" : "MemberExpression"
                                  },
                                  "property" : {
                                    "name" : "query",
                                    "type" : "Identifier"
                                  },
                                  "computed" : false,
                                  "type" : "MemberExpression"
                                },
                                "property" : {
                                  "name" : "call",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              },
                              "arguments" : [ {
                                "type" : "ThisExpression"
                              }, {
                                "name" : "searchBounds",
                                "type" : "Identifier"
                              }, {
                                "name" : "node",
                                "type" : "Identifier"
                              }, {
                                "name" : "visitor",
                                "type" : "Identifier"
                              } ],
                              "type" : "CallExpression"
                            },
                            "type" : "ExpressionStatement"
                          } ],
                          "type" : "BlockStatement"
                        },
                        "alternate" : {
                          "test" : {
                            "operator" : "&&",
                            "left" : {
                              "callee" : {
                                "name" : "hasInterface",
                                "type" : "Identifier"
                              },
                              "arguments" : [ {
                                "object" : {
                                  "name" : "arguments",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "value" : 2,
                                  "raw" : "2",
                                  "type" : "Literal"
                                },
                                "computed" : true,
                                "type" : "MemberExpression"
                              }, {
                                "name" : "List",
                                "type" : "Identifier"
                              } ],
                              "type" : "CallExpression"
                            },
                            "right" : {
                              "operator" : "&&",
                              "left" : {
                                "operator" : "instanceof",
                                "left" : {
                                  "object" : {
                                    "name" : "arguments",
                                    "type" : "Identifier"
                                  },
                                  "property" : {
                                    "value" : 0,
                                    "raw" : "0",
                                    "type" : "Literal"
                                  },
                                  "computed" : true,
                                  "type" : "MemberExpression"
                                },
                                "right" : {
                                  "name" : "Object",
                                  "type" : "Identifier"
                                },
                                "type" : "BinaryExpression"
                              },
                              "right" : {
                                "operator" : "instanceof",
                                "left" : {
                                  "object" : {
                                    "name" : "arguments",
                                    "type" : "Identifier"
                                  },
                                  "property" : {
                                    "value" : 1,
                                    "raw" : "1",
                                    "type" : "Literal"
                                  },
                                  "computed" : true,
                                  "type" : "MemberExpression"
                                },
                                "right" : {
                                  "name" : "AbstractNode",
                                  "type" : "Identifier"
                                },
                                "type" : "BinaryExpression"
                              },
                              "type" : "LogicalExpression"
                            },
                            "type" : "LogicalExpression"
                          },
                          "consequent" : {
                            "body" : [ {
                              "declarations" : [ {
                                "id" : {
                                  "name" : "searchBounds",
                                  "type" : "Identifier"
                                },
                                "init" : {
                                  "object" : {
                                    "name" : "arguments",
                                    "type" : "Identifier"
                                  },
                                  "property" : {
                                    "value" : 0,
                                    "raw" : "0",
                                    "type" : "Literal"
                                  },
                                  "computed" : true,
                                  "type" : "MemberExpression"
                                },
                                "type" : "VariableDeclarator"
                              }, {
                                "id" : {
                                  "name" : "node",
                                  "type" : "Identifier"
                                },
                                "init" : {
                                  "object" : {
                                    "name" : "arguments",
                                    "type" : "Identifier"
                                  },
                                  "property" : {
                                    "value" : 1,
                                    "raw" : "1",
                                    "type" : "Literal"
                                  },
                                  "computed" : true,
                                  "type" : "MemberExpression"
                                },
                                "type" : "VariableDeclarator"
                              }, {
                                "id" : {
                                  "name" : "matches",
                                  "type" : "Identifier"
                                },
                                "init" : {
                                  "object" : {
                                    "name" : "arguments",
                                    "type" : "Identifier"
                                  },
                                  "property" : {
                                    "value" : 2,
                                    "raw" : "2",
                                    "type" : "Literal"
                                  },
                                  "computed" : true,
                                  "type" : "MemberExpression"
                                },
                                "type" : "VariableDeclarator"
                              } ],
                              "kind" : "let",
                              "type" : "VariableDeclaration"
                            }, {
                              "expression" : {
                                "callee" : {
                                  "object" : {
                                    "object" : {
                                      "object" : {
                                        "name" : "AbstractSTRtree",
                                        "type" : "Identifier"
                                      },
                                      "property" : {
                                        "name" : "prototype",
                                        "type" : "Identifier"
                                      },
                                      "computed" : false,
                                      "type" : "MemberExpression"
                                    },
                                    "property" : {
                                      "name" : "query",
                                      "type" : "Identifier"
                                    },
                                    "computed" : false,
                                    "type" : "MemberExpression"
                                  },
                                  "property" : {
                                    "name" : "call",
                                    "type" : "Identifier"
                                  },
                                  "computed" : false,
                                  "type" : "MemberExpression"
                                },
                                "arguments" : [ {
                                  "type" : "ThisExpression"
                                }, {
                                  "name" : "searchBounds",
                                  "type" : "Identifier"
                                }, {
                                  "name" : "node",
                                  "type" : "Identifier"
                                }, {
                                  "name" : "matches",
                                  "type" : "Identifier"
                                } ],
                                "type" : "CallExpression"
                              },
                              "type" : "ExpressionStatement"
                            } ],
                            "type" : "BlockStatement"
                          },
                          "alternate" : null,
                          "type" : "IfStatement"
                        },
                        "type" : "IfStatement"
                      } ],
                      "type" : "BlockStatement"
                    },
                    "alternate" : null,
                    "type" : "IfStatement"
                  },
                  "type" : "IfStatement"
                },
                "type" : "IfStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "getComparator",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "comparator",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "interfaces_",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "elements" : [ ],
                  "type" : "ArrayExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "getClass",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "name" : "SIRtree",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        } ],
        "type" : "ObjectExpression"
      } ],
      "type" : "CallExpression"
    },
    "type" : "ExpressionStatement"
  } ],
  "type" : "Program"
}