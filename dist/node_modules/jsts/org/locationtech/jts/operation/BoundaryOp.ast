{
  "sourceType" : "module",
  "body" : [ {
    "specifiers" : [ {
      "local" : {
        "name" : "LineString",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../geom/LineString'",
      "raw" : "'../geom/LineString'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "BoundaryNodeRule",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../algorithm/BoundaryNodeRule'",
      "raw" : "'../algorithm/BoundaryNodeRule'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "extend",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../extend'",
      "raw" : "'../../../../extend'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "CoordinateArrays",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../geom/CoordinateArrays'",
      "raw" : "'../geom/CoordinateArrays'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "ArrayList",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../java/util/ArrayList'",
      "raw" : "'../../../../java/util/ArrayList'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "TreeMap",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../java/util/TreeMap'",
      "raw" : "'../../../../java/util/TreeMap'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "MultiLineString",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../geom/MultiLineString'",
      "raw" : "'../geom/MultiLineString'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "declaration" : {
      "id" : {
        "name" : "BoundaryOp",
        "type" : "Identifier"
      },
      "params" : [ ],
      "body" : {
        "body" : [ {
          "expression" : {
            "operator" : "=",
            "left" : {
              "object" : {
                "type" : "ThisExpression"
              },
              "property" : {
                "name" : "geom",
                "type" : "Identifier"
              },
              "computed" : false,
              "type" : "MemberExpression"
            },
            "right" : {
              "value" : null,
              "raw" : "null",
              "type" : "Literal"
            },
            "type" : "AssignmentExpression"
          },
          "type" : "ExpressionStatement"
        }, {
          "expression" : {
            "operator" : "=",
            "left" : {
              "object" : {
                "type" : "ThisExpression"
              },
              "property" : {
                "name" : "geomFact",
                "type" : "Identifier"
              },
              "computed" : false,
              "type" : "MemberExpression"
            },
            "right" : {
              "value" : null,
              "raw" : "null",
              "type" : "Literal"
            },
            "type" : "AssignmentExpression"
          },
          "type" : "ExpressionStatement"
        }, {
          "expression" : {
            "operator" : "=",
            "left" : {
              "object" : {
                "type" : "ThisExpression"
              },
              "property" : {
                "name" : "bnRule",
                "type" : "Identifier"
              },
              "computed" : false,
              "type" : "MemberExpression"
            },
            "right" : {
              "value" : null,
              "raw" : "null",
              "type" : "Literal"
            },
            "type" : "AssignmentExpression"
          },
          "type" : "ExpressionStatement"
        }, {
          "expression" : {
            "operator" : "=",
            "left" : {
              "object" : {
                "type" : "ThisExpression"
              },
              "property" : {
                "name" : "endpointMap",
                "type" : "Identifier"
              },
              "computed" : false,
              "type" : "MemberExpression"
            },
            "right" : {
              "value" : null,
              "raw" : "null",
              "type" : "Literal"
            },
            "type" : "AssignmentExpression"
          },
          "type" : "ExpressionStatement"
        }, {
          "test" : {
            "operator" : "===",
            "left" : {
              "name" : "arguments.length",
              "type" : "Identifier"
            },
            "right" : {
              "value" : 1,
              "raw" : "1",
              "type" : "Literal"
            },
            "type" : "BinaryExpression"
          },
          "consequent" : {
            "body" : [ {
              "declarations" : [ {
                "id" : {
                  "name" : "geom",
                  "type" : "Identifier"
                },
                "init" : {
                  "object" : {
                    "name" : "arguments",
                    "type" : "Identifier"
                  },
                  "property" : {
                    "value" : 0,
                    "raw" : "0",
                    "type" : "Literal"
                  },
                  "computed" : true,
                  "type" : "MemberExpression"
                },
                "type" : "VariableDeclarator"
              } ],
              "kind" : "let",
              "type" : "VariableDeclaration"
            }, {
              "expression" : {
                "callee" : {
                  "object" : {
                    "name" : "BoundaryOp",
                    "type" : "Identifier"
                  },
                  "property" : {
                    "name" : "call",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "arguments" : [ {
                  "type" : "ThisExpression"
                }, {
                  "name" : "geom",
                  "type" : "Identifier"
                }, {
                  "object" : {
                    "name" : "BoundaryNodeRule",
                    "type" : "Identifier"
                  },
                  "property" : {
                    "name" : "MOD2_BOUNDARY_RULE",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                } ],
                "type" : "CallExpression"
              },
              "type" : "ExpressionStatement"
            } ],
            "type" : "BlockStatement"
          },
          "alternate" : {
            "test" : {
              "operator" : "===",
              "left" : {
                "name" : "arguments.length",
                "type" : "Identifier"
              },
              "right" : {
                "value" : 2,
                "raw" : "2",
                "type" : "Literal"
              },
              "type" : "BinaryExpression"
            },
            "consequent" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "geom",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "object" : {
                      "name" : "arguments",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "value" : 0,
                      "raw" : "0",
                      "type" : "Literal"
                    },
                    "computed" : true,
                    "type" : "MemberExpression"
                  },
                  "type" : "VariableDeclarator"
                }, {
                  "id" : {
                    "name" : "bnRule",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "object" : {
                      "name" : "arguments",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "value" : 1,
                      "raw" : "1",
                      "type" : "Literal"
                    },
                    "computed" : true,
                    "type" : "MemberExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "geom",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "name" : "geom",
                    "type" : "Identifier"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "geomFact",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "callee" : {
                      "object" : {
                        "name" : "geom",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "getFactory",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "bnRule",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "name" : "bnRule",
                    "type" : "Identifier"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              } ],
              "type" : "BlockStatement"
            },
            "alternate" : null,
            "type" : "IfStatement"
          },
          "type" : "IfStatement"
        } ],
        "type" : "BlockStatement"
      },
      "generator" : false,
      "type" : "FunctionDeclaration"
    },
    "type" : "ExportDefaultDeclaration"
  }, {
    "expression" : {
      "callee" : {
        "name" : "extend",
        "type" : "Identifier"
      },
      "arguments" : [ {
        "object" : {
          "name" : "BoundaryOp",
          "type" : "Identifier"
        },
        "property" : {
          "name" : "prototype",
          "type" : "Identifier"
        },
        "computed" : false,
        "type" : "MemberExpression"
      }, {
        "properties" : [ {
          "key" : {
            "name" : "boundaryMultiLineString",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "mLine",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "test" : {
                  "callee" : {
                    "object" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "geom",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "property" : {
                      "name" : "isEmpty",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "argument" : {
                      "callee" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "getEmptyMultiPoint",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    },
                    "type" : "ReturnStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "bdyPts",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "computeBoundaryCoordinates",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "name" : "mLine",
                      "type" : "Identifier"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "var",
                "type" : "VariableDeclaration"
              }, {
                "test" : {
                  "operator" : "===",
                  "left" : {
                    "object" : {
                      "name" : "bdyPts",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "length",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : "1",
                    "raw" : "1",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "argument" : {
                      "callee" : {
                        "object" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "geomFact",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "property" : {
                          "name" : "createPoint",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "object" : {
                          "name" : "bdyPts",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "value" : "0",
                          "raw" : "0",
                          "type" : "Literal"
                        },
                        "computed" : true,
                        "type" : "MemberExpression"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ReturnStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "argument" : {
                  "callee" : {
                    "object" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "geomFact",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "property" : {
                      "name" : "createMultiPointFromCoords",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "bdyPts",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "getBoundary",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "test" : {
                  "operator" : "instanceof",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "geom",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "name" : "LineString",
                    "type" : "Identifier"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "argument" : {
                    "callee" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "boundaryLineString",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "geom",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "ReturnStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "test" : {
                  "operator" : "instanceof",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "geom",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "name" : "MultiLineString",
                    "type" : "Identifier"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "argument" : {
                    "callee" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "boundaryMultiLineString",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "geom",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "ReturnStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "argument" : {
                  "callee" : {
                    "object" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "geom",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "property" : {
                      "name" : "getBoundary",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "boundaryLineString",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "line",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "test" : {
                  "callee" : {
                    "object" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "geom",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "property" : {
                      "name" : "isEmpty",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "argument" : {
                      "callee" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "getEmptyMultiPoint",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    },
                    "type" : "ReturnStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "test" : {
                  "callee" : {
                    "object" : {
                      "name" : "line",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "isClosed",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "declarations" : [ {
                      "id" : {
                        "name" : "closedEndpointOnBoundary",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "callee" : {
                          "object" : {
                            "object" : {
                              "type" : "ThisExpression"
                            },
                            "property" : {
                              "name" : "bnRule",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "property" : {
                            "name" : "isInBoundary",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "value" : "2",
                          "raw" : "2",
                          "type" : "Literal"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "var",
                    "type" : "VariableDeclaration"
                  }, {
                    "test" : {
                      "name" : "closedEndpointOnBoundary",
                      "type" : "Identifier"
                    },
                    "consequent" : {
                      "body" : [ {
                        "argument" : {
                          "callee" : {
                            "object" : {
                              "name" : "line",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "getStartPoint",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ ],
                          "type" : "CallExpression"
                        },
                        "type" : "ReturnStatement"
                      } ],
                      "type" : "BlockStatement"
                    },
                    "alternate" : {
                      "body" : [ {
                        "argument" : {
                          "callee" : {
                            "object" : {
                              "object" : {
                                "type" : "ThisExpression"
                              },
                              "property" : {
                                "name" : "geomFact",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "property" : {
                              "name" : "createMultiPoint",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ ],
                          "type" : "CallExpression"
                        },
                        "type" : "ReturnStatement"
                      } ],
                      "type" : "BlockStatement"
                    },
                    "type" : "IfStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "argument" : {
                  "callee" : {
                    "object" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "geomFact",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "property" : {
                      "name" : "createMultiPoint",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "elements" : [ {
                      "callee" : {
                        "object" : {
                          "name" : "line",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "getStartPoint",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    }, {
                      "callee" : {
                        "object" : {
                          "name" : "line",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "getEndPoint",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    } ],
                    "type" : "ArrayExpression"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "getEmptyMultiPoint",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "callee" : {
                    "object" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "geomFact",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "property" : {
                      "name" : "createMultiPoint",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "computeBoundaryCoordinates",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "mLine",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "bdyPts",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "name" : "ArrayList",
                      "type" : "Identifier"
                    },
                    "arguments" : [ ],
                    "type" : "NewExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "var",
                "type" : "VariableDeclaration"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "endpointMap",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "callee" : {
                      "name" : "TreeMap",
                      "type" : "Identifier"
                    },
                    "arguments" : [ ],
                    "type" : "NewExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "init" : {
                  "declarations" : [ {
                    "id" : {
                      "name" : "i",
                      "type" : "Identifier"
                    },
                    "init" : {
                      "value" : "0",
                      "raw" : "0",
                      "type" : "Literal"
                    },
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "var",
                  "type" : "VariableDeclaration"
                },
                "test" : {
                  "operator" : "<",
                  "left" : {
                    "name" : "i",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "callee" : {
                      "object" : {
                        "name" : "mLine",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "getNumGeometries",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  },
                  "type" : "BinaryExpression"
                },
                "update" : {
                  "operator" : "++",
                  "prefix" : false,
                  "argument" : {
                    "name" : "i",
                    "type" : "Identifier"
                  },
                  "type" : "UnaryExpression"
                },
                "body" : {
                  "body" : [ {
                    "declarations" : [ {
                      "id" : {
                        "name" : "line",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "callee" : {
                          "object" : {
                            "name" : "mLine",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getGeometryN",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "name" : "i",
                          "type" : "Identifier"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "var",
                    "type" : "VariableDeclaration"
                  }, {
                    "test" : {
                      "operator" : "===",
                      "left" : {
                        "callee" : {
                          "object" : {
                            "name" : "line",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getNumPoints",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "right" : {
                        "value" : "0",
                        "raw" : "0",
                        "type" : "Literal"
                      },
                      "type" : "BinaryExpression"
                    },
                    "consequent" : {
                      "label" : null,
                      "type" : "ContinueStatement"
                    },
                    "alternate" : null,
                    "type" : "IfStatement"
                  }, {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "addEndpoint",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "callee" : {
                          "object" : {
                            "name" : "line",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getCoordinateN",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "value" : "0",
                          "raw" : "0",
                          "type" : "Literal"
                        } ],
                        "type" : "CallExpression"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "addEndpoint",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "callee" : {
                          "object" : {
                            "name" : "line",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getCoordinateN",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "operator" : "-",
                          "left" : {
                            "callee" : {
                              "object" : {
                                "name" : "line",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "getNumPoints",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ ],
                            "type" : "CallExpression"
                          },
                          "right" : {
                            "value" : "1",
                            "raw" : "1",
                            "type" : "Literal"
                          },
                          "type" : "BinaryExpression"
                        } ],
                        "type" : "CallExpression"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "type" : "ForStatement"
              }, {
                "init" : {
                  "declarations" : [ {
                    "id" : {
                      "name" : "it",
                      "type" : "Identifier"
                    },
                    "init" : {
                      "callee" : {
                        "object" : {
                          "callee" : {
                            "object" : {
                              "object" : {
                                "type" : "ThisExpression"
                              },
                              "property" : {
                                "name" : "endpointMap",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "property" : {
                              "name" : "entrySet",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ ],
                          "type" : "CallExpression"
                        },
                        "property" : {
                          "name" : "iterator",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    },
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "var",
                  "type" : "VariableDeclaration"
                },
                "test" : {
                  "callee" : {
                    "object" : {
                      "name" : "it",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "hasNext",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "update" : null,
                "body" : {
                  "body" : [ {
                    "declarations" : [ {
                      "id" : {
                        "name" : "entry",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "callee" : {
                          "object" : {
                            "name" : "it",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "next",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "var",
                    "type" : "VariableDeclaration"
                  }, {
                    "declarations" : [ {
                      "id" : {
                        "name" : "counter",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "callee" : {
                          "object" : {
                            "name" : "entry",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getValue",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "var",
                    "type" : "VariableDeclaration"
                  }, {
                    "declarations" : [ {
                      "id" : {
                        "name" : "valence",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "object" : {
                          "name" : "counter",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "count",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "var",
                    "type" : "VariableDeclaration"
                  }, {
                    "test" : {
                      "callee" : {
                        "object" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "bnRule",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "property" : {
                          "name" : "isInBoundary",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "valence",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    },
                    "consequent" : {
                      "body" : [ {
                        "expression" : {
                          "callee" : {
                            "object" : {
                              "name" : "bdyPts",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "add",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ {
                            "callee" : {
                              "object" : {
                                "name" : "entry",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "getKey",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ ],
                            "type" : "CallExpression"
                          } ],
                          "type" : "CallExpression"
                        },
                        "type" : "ExpressionStatement"
                      } ],
                      "type" : "BlockStatement"
                    },
                    "alternate" : null,
                    "type" : "IfStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "type" : "ForStatement"
              }, {
                "argument" : {
                  "callee" : {
                    "object" : {
                      "name" : "CoordinateArrays",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "toCoordinateArray",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "bdyPts",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "addEndpoint",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "pt",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "counter",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "endpointMap",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "property" : {
                        "name" : "get",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "name" : "pt",
                      "type" : "Identifier"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "var",
                "type" : "VariableDeclaration"
              }, {
                "test" : {
                  "operator" : "===",
                  "left" : {
                    "name" : "counter",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "name" : "counter",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "callee" : {
                          "name" : "Counter",
                          "type" : "Identifier"
                        },
                        "arguments" : [ ],
                        "type" : "NewExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "endpointMap",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "property" : {
                          "name" : "put",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "pt",
                        "type" : "Identifier"
                      }, {
                        "name" : "counter",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "expression" : {
                  "operator" : "++",
                  "prefix" : false,
                  "argument" : {
                    "object" : {
                      "name" : "counter",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "count",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "type" : "UnaryExpression"
                },
                "type" : "ExpressionStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "interfaces_",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "elements" : [ ],
                  "type" : "ArrayExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "getClass",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "name" : "BoundaryOp",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        } ],
        "type" : "ObjectExpression"
      } ],
      "type" : "CallExpression"
    },
    "type" : "ExpressionStatement"
  }, {
    "expression" : {
      "operator" : "=",
      "left" : {
        "object" : {
          "name" : "BoundaryOp",
          "type" : "Identifier"
        },
        "property" : {
          "name" : "getBoundary",
          "type" : "Identifier"
        },
        "computed" : false,
        "type" : "MemberExpression"
      },
      "right" : {
        "params" : [ ],
        "body" : {
          "body" : [ {
            "test" : {
              "operator" : "===",
              "left" : {
                "name" : "arguments.length",
                "type" : "Identifier"
              },
              "right" : {
                "value" : 1,
                "raw" : "1",
                "type" : "Literal"
              },
              "type" : "BinaryExpression"
            },
            "consequent" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "g",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "object" : {
                      "name" : "arguments",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "value" : 0,
                      "raw" : "0",
                      "type" : "Literal"
                    },
                    "computed" : true,
                    "type" : "MemberExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "bop",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "name" : "BoundaryOp",
                      "type" : "Identifier"
                    },
                    "arguments" : [ {
                      "name" : "g",
                      "type" : "Identifier"
                    } ],
                    "type" : "NewExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "var",
                "type" : "VariableDeclaration"
              }, {
                "argument" : {
                  "callee" : {
                    "object" : {
                      "name" : "bop",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "getBoundary",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "alternate" : {
              "test" : {
                "operator" : "===",
                "left" : {
                  "name" : "arguments.length",
                  "type" : "Identifier"
                },
                "right" : {
                  "value" : 2,
                  "raw" : "2",
                  "type" : "Literal"
                },
                "type" : "BinaryExpression"
              },
              "consequent" : {
                "body" : [ {
                  "declarations" : [ {
                    "id" : {
                      "name" : "g",
                      "type" : "Identifier"
                    },
                    "init" : {
                      "object" : {
                        "name" : "arguments",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "value" : 0,
                        "raw" : "0",
                        "type" : "Literal"
                      },
                      "computed" : true,
                      "type" : "MemberExpression"
                    },
                    "type" : "VariableDeclarator"
                  }, {
                    "id" : {
                      "name" : "bnRule",
                      "type" : "Identifier"
                    },
                    "init" : {
                      "object" : {
                        "name" : "arguments",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "value" : 1,
                        "raw" : "1",
                        "type" : "Literal"
                      },
                      "computed" : true,
                      "type" : "MemberExpression"
                    },
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "let",
                  "type" : "VariableDeclaration"
                }, {
                  "declarations" : [ {
                    "id" : {
                      "name" : "bop",
                      "type" : "Identifier"
                    },
                    "init" : {
                      "callee" : {
                        "name" : "BoundaryOp",
                        "type" : "Identifier"
                      },
                      "arguments" : [ {
                        "name" : "g",
                        "type" : "Identifier"
                      }, {
                        "name" : "bnRule",
                        "type" : "Identifier"
                      } ],
                      "type" : "NewExpression"
                    },
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "var",
                  "type" : "VariableDeclaration"
                }, {
                  "argument" : {
                    "callee" : {
                      "object" : {
                        "name" : "bop",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "getBoundary",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  },
                  "type" : "ReturnStatement"
                } ],
                "type" : "BlockStatement"
              },
              "alternate" : null,
              "type" : "IfStatement"
            },
            "type" : "IfStatement"
          } ],
          "type" : "BlockStatement"
        },
        "generator" : false,
        "type" : "FunctionExpression"
      },
      "type" : "AssignmentExpression"
    },
    "type" : "ExpressionStatement"
  }, {
    "id" : {
      "name" : "Counter",
      "type" : "Identifier"
    },
    "params" : [ ],
    "body" : {
      "body" : [ {
        "expression" : {
          "operator" : "=",
          "left" : {
            "object" : {
              "type" : "ThisExpression"
            },
            "property" : {
              "name" : "count",
              "type" : "Identifier"
            },
            "computed" : false,
            "type" : "MemberExpression"
          },
          "right" : {
            "value" : null,
            "raw" : "null",
            "type" : "Literal"
          },
          "type" : "AssignmentExpression"
        },
        "type" : "ExpressionStatement"
      } ],
      "type" : "BlockStatement"
    },
    "generator" : false,
    "type" : "FunctionDeclaration"
  }, {
    "expression" : {
      "callee" : {
        "name" : "extend",
        "type" : "Identifier"
      },
      "arguments" : [ {
        "object" : {
          "name" : "Counter",
          "type" : "Identifier"
        },
        "property" : {
          "name" : "prototype",
          "type" : "Identifier"
        },
        "computed" : false,
        "type" : "MemberExpression"
      }, {
        "properties" : [ {
          "key" : {
            "name" : "interfaces_",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "elements" : [ ],
                  "type" : "ArrayExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "getClass",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "name" : "Counter",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        } ],
        "type" : "ObjectExpression"
      } ],
      "type" : "CallExpression"
    },
    "type" : "ExpressionStatement"
  } ],
  "type" : "Program"
}