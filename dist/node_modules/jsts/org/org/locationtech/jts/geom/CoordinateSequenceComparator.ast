{
  "sourceType" : "module",
  "body" : [ {
    "specifiers" : [ {
      "local" : {
        "name" : "Double",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../java/lang/Double'",
      "raw" : "'../../../../java/lang/Double'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "extend",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../extend'",
      "raw" : "'../../../../extend'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "Integer",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../java/lang/Integer'",
      "raw" : "'../../../../java/lang/Integer'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "Comparator",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../java/util/Comparator'",
      "raw" : "'../../../../java/util/Comparator'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "declaration" : {
      "id" : {
        "name" : "CoordinateSequenceComparator",
        "type" : "Identifier"
      },
      "params" : [ ],
      "body" : {
        "body" : [ {
          "expression" : {
            "operator" : "=",
            "left" : {
              "object" : {
                "type" : "ThisExpression"
              },
              "property" : {
                "name" : "dimensionLimit",
                "type" : "Identifier"
              },
              "computed" : false,
              "type" : "MemberExpression"
            },
            "right" : {
              "value" : null,
              "raw" : "null",
              "type" : "Literal"
            },
            "type" : "AssignmentExpression"
          },
          "type" : "ExpressionStatement"
        }, {
          "test" : {
            "operator" : "===",
            "left" : {
              "name" : "arguments.length",
              "type" : "Identifier"
            },
            "right" : {
              "value" : 0,
              "raw" : "0",
              "type" : "Literal"
            },
            "type" : "BinaryExpression"
          },
          "consequent" : {
            "body" : [ {
              "expression" : {
                "operator" : "=",
                "left" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "dimensionLimit",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "right" : {
                  "object" : {
                    "name" : "Integer",
                    "type" : "Identifier"
                  },
                  "property" : {
                    "name" : "MAX_VALUE",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "type" : "AssignmentExpression"
              },
              "type" : "ExpressionStatement"
            } ],
            "type" : "BlockStatement"
          },
          "alternate" : {
            "test" : {
              "operator" : "===",
              "left" : {
                "name" : "arguments.length",
                "type" : "Identifier"
              },
              "right" : {
                "value" : 1,
                "raw" : "1",
                "type" : "Literal"
              },
              "type" : "BinaryExpression"
            },
            "consequent" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "dimensionLimit",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "object" : {
                      "name" : "arguments",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "value" : 0,
                      "raw" : "0",
                      "type" : "Literal"
                    },
                    "computed" : true,
                    "type" : "MemberExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "dimensionLimit",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "name" : "dimensionLimit",
                    "type" : "Identifier"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              } ],
              "type" : "BlockStatement"
            },
            "alternate" : null,
            "type" : "IfStatement"
          },
          "type" : "IfStatement"
        } ],
        "type" : "BlockStatement"
      },
      "generator" : false,
      "type" : "FunctionDeclaration"
    },
    "type" : "ExportDefaultDeclaration"
  }, {
    "expression" : {
      "callee" : {
        "name" : "extend",
        "type" : "Identifier"
      },
      "arguments" : [ {
        "object" : {
          "name" : "CoordinateSequenceComparator",
          "type" : "Identifier"
        },
        "property" : {
          "name" : "prototype",
          "type" : "Identifier"
        },
        "computed" : false,
        "type" : "MemberExpression"
      }, {
        "properties" : [ {
          "key" : {
            "name" : "compare",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "o1",
              "type" : "Identifier"
            }, {
              "name" : "o2",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "s1",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "name" : "o1",
                    "type" : "Identifier"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "var",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "s2",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "name" : "o2",
                    "type" : "Identifier"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "var",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "size1",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "s1",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "size",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "var",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "size2",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "s2",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "size",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "var",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "dim1",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "s1",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "getDimension",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "var",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "dim2",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "s2",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "getDimension",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "var",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "minDim",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "name" : "dim1",
                    "type" : "Identifier"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "var",
                "type" : "VariableDeclaration"
              }, {
                "test" : {
                  "operator" : "<",
                  "left" : {
                    "name" : "dim2",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "minDim",
                    "type" : "Identifier"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "expression" : {
                    "operator" : "=",
                    "left" : {
                      "name" : "minDim",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "name" : "dim2",
                      "type" : "Identifier"
                    },
                    "type" : "AssignmentExpression"
                  },
                  "type" : "ExpressionStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "dimLimited",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "value" : false,
                    "raw" : "false",
                    "type" : "Literal"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "var",
                "type" : "VariableDeclaration"
              }, {
                "test" : {
                  "operator" : "<=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "dimensionLimit",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "name" : "minDim",
                    "type" : "Identifier"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "name" : "minDim",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "dimensionLimit",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "name" : "dimLimited",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "value" : true,
                        "raw" : "true",
                        "type" : "Literal"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "test" : {
                  "operator" : "!",
                  "prefix" : true,
                  "argument" : {
                    "name" : "dimLimited",
                    "type" : "Identifier"
                  },
                  "type" : "UnaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "test" : {
                      "operator" : "<",
                      "left" : {
                        "name" : "dim1",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "name" : "dim2",
                        "type" : "Identifier"
                      },
                      "type" : "BinaryExpression"
                    },
                    "consequent" : {
                      "argument" : {
                        "operator" : "-",
                        "prefix" : true,
                        "argument" : {
                          "value" : "1",
                          "raw" : "1",
                          "type" : "Literal"
                        },
                        "type" : "UnaryExpression"
                      },
                      "type" : "ReturnStatement"
                    },
                    "alternate" : null,
                    "type" : "IfStatement"
                  }, {
                    "test" : {
                      "operator" : ">",
                      "left" : {
                        "name" : "dim1",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "name" : "dim2",
                        "type" : "Identifier"
                      },
                      "type" : "BinaryExpression"
                    },
                    "consequent" : {
                      "argument" : {
                        "value" : "1",
                        "raw" : "1",
                        "type" : "Literal"
                      },
                      "type" : "ReturnStatement"
                    },
                    "alternate" : null,
                    "type" : "IfStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "i",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "value" : "0",
                    "raw" : "0",
                    "type" : "Literal"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "var",
                "type" : "VariableDeclaration"
              }, {
                "test" : {
                  "operator" : "&&",
                  "left" : {
                    "operator" : "<",
                    "left" : {
                      "name" : "i",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "name" : "size1",
                      "type" : "Identifier"
                    },
                    "type" : "BinaryExpression"
                  },
                  "right" : {
                    "operator" : "<",
                    "left" : {
                      "name" : "i",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "name" : "size2",
                      "type" : "Identifier"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "BinaryExpression"
                },
                "body" : {
                  "body" : [ {
                    "declarations" : [ {
                      "id" : {
                        "name" : "ptComp",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "callee" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "compareCoordinate",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "name" : "s1",
                          "type" : "Identifier"
                        }, {
                          "name" : "s2",
                          "type" : "Identifier"
                        }, {
                          "name" : "i",
                          "type" : "Identifier"
                        }, {
                          "name" : "minDim",
                          "type" : "Identifier"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "var",
                    "type" : "VariableDeclaration"
                  }, {
                    "test" : {
                      "operator" : "!==",
                      "left" : {
                        "name" : "ptComp",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "value" : "0",
                        "raw" : "0",
                        "type" : "Literal"
                      },
                      "type" : "BinaryExpression"
                    },
                    "consequent" : {
                      "argument" : {
                        "name" : "ptComp",
                        "type" : "Identifier"
                      },
                      "type" : "ReturnStatement"
                    },
                    "alternate" : null,
                    "type" : "IfStatement"
                  }, {
                    "expression" : {
                      "operator" : "++",
                      "prefix" : false,
                      "argument" : {
                        "name" : "i",
                        "type" : "Identifier"
                      },
                      "type" : "UnaryExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "type" : "WhileStatement"
              }, {
                "test" : {
                  "operator" : "<",
                  "left" : {
                    "name" : "i",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "size1",
                    "type" : "Identifier"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "argument" : {
                    "value" : "1",
                    "raw" : "1",
                    "type" : "Literal"
                  },
                  "type" : "ReturnStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "test" : {
                  "operator" : "<",
                  "left" : {
                    "name" : "i",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "size2",
                    "type" : "Identifier"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "argument" : {
                    "operator" : "-",
                    "prefix" : true,
                    "argument" : {
                      "value" : "1",
                      "raw" : "1",
                      "type" : "Literal"
                    },
                    "type" : "UnaryExpression"
                  },
                  "type" : "ReturnStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "argument" : {
                  "value" : "0",
                  "raw" : "0",
                  "type" : "Literal"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "compareCoordinate",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "s1",
              "type" : "Identifier"
            }, {
              "name" : "s2",
              "type" : "Identifier"
            }, {
              "name" : "i",
              "type" : "Identifier"
            }, {
              "name" : "dimension",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "init" : {
                  "declarations" : [ {
                    "id" : {
                      "name" : "d",
                      "type" : "Identifier"
                    },
                    "init" : {
                      "value" : "0",
                      "raw" : "0",
                      "type" : "Literal"
                    },
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "var",
                  "type" : "VariableDeclaration"
                },
                "test" : {
                  "operator" : "<",
                  "left" : {
                    "name" : "d",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "dimension",
                    "type" : "Identifier"
                  },
                  "type" : "BinaryExpression"
                },
                "update" : {
                  "operator" : "++",
                  "prefix" : false,
                  "argument" : {
                    "name" : "d",
                    "type" : "Identifier"
                  },
                  "type" : "UnaryExpression"
                },
                "body" : {
                  "body" : [ {
                    "declarations" : [ {
                      "id" : {
                        "name" : "ord1",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "callee" : {
                          "object" : {
                            "name" : "s1",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getOrdinate",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "name" : "i",
                          "type" : "Identifier"
                        }, {
                          "name" : "d",
                          "type" : "Identifier"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "var",
                    "type" : "VariableDeclaration"
                  }, {
                    "declarations" : [ {
                      "id" : {
                        "name" : "ord2",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "callee" : {
                          "object" : {
                            "name" : "s2",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getOrdinate",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "name" : "i",
                          "type" : "Identifier"
                        }, {
                          "name" : "d",
                          "type" : "Identifier"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "var",
                    "type" : "VariableDeclaration"
                  }, {
                    "declarations" : [ {
                      "id" : {
                        "name" : "comp",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "callee" : {
                          "object" : {
                            "name" : "CoordinateSequenceComparator",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "compare",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "name" : "ord1",
                          "type" : "Identifier"
                        }, {
                          "name" : "ord2",
                          "type" : "Identifier"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "var",
                    "type" : "VariableDeclaration"
                  }, {
                    "test" : {
                      "operator" : "!==",
                      "left" : {
                        "name" : "comp",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "value" : "0",
                        "raw" : "0",
                        "type" : "Literal"
                      },
                      "type" : "BinaryExpression"
                    },
                    "consequent" : {
                      "argument" : {
                        "name" : "comp",
                        "type" : "Identifier"
                      },
                      "type" : "ReturnStatement"
                    },
                    "alternate" : null,
                    "type" : "IfStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "type" : "ForStatement"
              }, {
                "argument" : {
                  "value" : "0",
                  "raw" : "0",
                  "type" : "Literal"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "interfaces_",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "elements" : [ {
                    "name" : "Comparator",
                    "type" : "Identifier"
                  } ],
                  "type" : "ArrayExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "getClass",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "name" : "CoordinateSequenceComparator",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        } ],
        "type" : "ObjectExpression"
      } ],
      "type" : "CallExpression"
    },
    "type" : "ExpressionStatement"
  }, {
    "expression" : {
      "operator" : "=",
      "left" : {
        "object" : {
          "name" : "CoordinateSequenceComparator",
          "type" : "Identifier"
        },
        "property" : {
          "name" : "compare",
          "type" : "Identifier"
        },
        "computed" : false,
        "type" : "MemberExpression"
      },
      "right" : {
        "params" : [ {
          "name" : "a",
          "type" : "Identifier"
        }, {
          "name" : "b",
          "type" : "Identifier"
        } ],
        "body" : {
          "body" : [ {
            "test" : {
              "operator" : "<",
              "left" : {
                "name" : "a",
                "type" : "Identifier"
              },
              "right" : {
                "name" : "b",
                "type" : "Identifier"
              },
              "type" : "BinaryExpression"
            },
            "consequent" : {
              "argument" : {
                "operator" : "-",
                "prefix" : true,
                "argument" : {
                  "value" : "1",
                  "raw" : "1",
                  "type" : "Literal"
                },
                "type" : "UnaryExpression"
              },
              "type" : "ReturnStatement"
            },
            "alternate" : null,
            "type" : "IfStatement"
          }, {
            "test" : {
              "operator" : ">",
              "left" : {
                "name" : "a",
                "type" : "Identifier"
              },
              "right" : {
                "name" : "b",
                "type" : "Identifier"
              },
              "type" : "BinaryExpression"
            },
            "consequent" : {
              "argument" : {
                "value" : "1",
                "raw" : "1",
                "type" : "Literal"
              },
              "type" : "ReturnStatement"
            },
            "alternate" : null,
            "type" : "IfStatement"
          }, {
            "test" : {
              "callee" : {
                "object" : {
                  "name" : "Double",
                  "type" : "Identifier"
                },
                "property" : {
                  "name" : "isNaN",
                  "type" : "Identifier"
                },
                "computed" : false,
                "type" : "MemberExpression"
              },
              "arguments" : [ {
                "name" : "a",
                "type" : "Identifier"
              } ],
              "type" : "CallExpression"
            },
            "consequent" : {
              "body" : [ {
                "test" : {
                  "callee" : {
                    "object" : {
                      "name" : "Double",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "isNaN",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "b",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "consequent" : {
                  "argument" : {
                    "value" : "0",
                    "raw" : "0",
                    "type" : "Literal"
                  },
                  "type" : "ReturnStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "argument" : {
                  "operator" : "-",
                  "prefix" : true,
                  "argument" : {
                    "value" : "1",
                    "raw" : "1",
                    "type" : "Literal"
                  },
                  "type" : "UnaryExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "alternate" : null,
            "type" : "IfStatement"
          }, {
            "test" : {
              "callee" : {
                "object" : {
                  "name" : "Double",
                  "type" : "Identifier"
                },
                "property" : {
                  "name" : "isNaN",
                  "type" : "Identifier"
                },
                "computed" : false,
                "type" : "MemberExpression"
              },
              "arguments" : [ {
                "name" : "b",
                "type" : "Identifier"
              } ],
              "type" : "CallExpression"
            },
            "consequent" : {
              "argument" : {
                "value" : "1",
                "raw" : "1",
                "type" : "Literal"
              },
              "type" : "ReturnStatement"
            },
            "alternate" : null,
            "type" : "IfStatement"
          }, {
            "argument" : {
              "value" : "0",
              "raw" : "0",
              "type" : "Literal"
            },
            "type" : "ReturnStatement"
          } ],
          "type" : "BlockStatement"
        },
        "generator" : false,
        "type" : "FunctionExpression"
      },
      "type" : "AssignmentExpression"
    },
    "type" : "ExpressionStatement"
  } ],
  "type" : "Program"
}