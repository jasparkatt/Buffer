{
  "sourceType" : "module",
  "body" : [ {
    "specifiers" : [ {
      "local" : {
        "name" : "CoordinateList",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../geom/CoordinateList'",
      "raw" : "'../../geom/CoordinateList'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "hasInterface",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../../hasInterface'",
      "raw" : "'../../../../../hasInterface'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "extend",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../../extend'",
      "raw" : "'../../../../../extend'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "ArrayList",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../../java/util/ArrayList'",
      "raw" : "'../../../../../java/util/ArrayList'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "KdNodeVisitor",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'./KdNodeVisitor'",
      "raw" : "'./KdNodeVisitor'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "Envelope",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../geom/Envelope'",
      "raw" : "'../../geom/Envelope'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "List",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../../java/util/List'",
      "raw" : "'../../../../../java/util/List'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "KdNode",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'./KdNode'",
      "raw" : "'./KdNode'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "declaration" : {
      "id" : {
        "name" : "KdTree",
        "type" : "Identifier"
      },
      "params" : [ ],
      "body" : {
        "body" : [ {
          "expression" : {
            "operator" : "=",
            "left" : {
              "object" : {
                "type" : "ThisExpression"
              },
              "property" : {
                "name" : "root",
                "type" : "Identifier"
              },
              "computed" : false,
              "type" : "MemberExpression"
            },
            "right" : {
              "value" : null,
              "raw" : "null",
              "type" : "Literal"
            },
            "type" : "AssignmentExpression"
          },
          "type" : "ExpressionStatement"
        }, {
          "expression" : {
            "operator" : "=",
            "left" : {
              "object" : {
                "type" : "ThisExpression"
              },
              "property" : {
                "name" : "numberOfNodes",
                "type" : "Identifier"
              },
              "computed" : false,
              "type" : "MemberExpression"
            },
            "right" : {
              "value" : null,
              "raw" : "null",
              "type" : "Literal"
            },
            "type" : "AssignmentExpression"
          },
          "type" : "ExpressionStatement"
        }, {
          "expression" : {
            "operator" : "=",
            "left" : {
              "object" : {
                "type" : "ThisExpression"
              },
              "property" : {
                "name" : "tolerance",
                "type" : "Identifier"
              },
              "computed" : false,
              "type" : "MemberExpression"
            },
            "right" : {
              "value" : null,
              "raw" : "null",
              "type" : "Literal"
            },
            "type" : "AssignmentExpression"
          },
          "type" : "ExpressionStatement"
        }, {
          "test" : {
            "operator" : "===",
            "left" : {
              "name" : "arguments.length",
              "type" : "Identifier"
            },
            "right" : {
              "value" : 0,
              "raw" : "0",
              "type" : "Literal"
            },
            "type" : "BinaryExpression"
          },
          "consequent" : {
            "body" : [ {
              "expression" : {
                "callee" : {
                  "object" : {
                    "name" : "KdTree",
                    "type" : "Identifier"
                  },
                  "property" : {
                    "name" : "call",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "arguments" : [ {
                  "type" : "ThisExpression"
                }, {
                  "value" : "0.0",
                  "raw" : "0.0",
                  "type" : "Literal"
                } ],
                "type" : "CallExpression"
              },
              "type" : "ExpressionStatement"
            } ],
            "type" : "BlockStatement"
          },
          "alternate" : {
            "test" : {
              "operator" : "===",
              "left" : {
                "name" : "arguments.length",
                "type" : "Identifier"
              },
              "right" : {
                "value" : 1,
                "raw" : "1",
                "type" : "Literal"
              },
              "type" : "BinaryExpression"
            },
            "consequent" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "tolerance",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "object" : {
                      "name" : "arguments",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "value" : 0,
                      "raw" : "0",
                      "type" : "Literal"
                    },
                    "computed" : true,
                    "type" : "MemberExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "tolerance",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "name" : "tolerance",
                    "type" : "Identifier"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              } ],
              "type" : "BlockStatement"
            },
            "alternate" : null,
            "type" : "IfStatement"
          },
          "type" : "IfStatement"
        } ],
        "type" : "BlockStatement"
      },
      "generator" : false,
      "type" : "FunctionDeclaration"
    },
    "type" : "ExportDefaultDeclaration"
  }, {
    "expression" : {
      "callee" : {
        "name" : "extend",
        "type" : "Identifier"
      },
      "arguments" : [ {
        "object" : {
          "name" : "KdTree",
          "type" : "Identifier"
        },
        "property" : {
          "name" : "prototype",
          "type" : "Identifier"
        },
        "computed" : false,
        "type" : "MemberExpression"
      }, {
        "properties" : [ {
          "key" : {
            "name" : "insert",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "test" : {
                  "operator" : "===",
                  "left" : {
                    "name" : "arguments.length",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "value" : 1,
                    "raw" : "1",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "declarations" : [ {
                      "id" : {
                        "name" : "p",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "object" : {
                          "name" : "arguments",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "value" : 0,
                          "raw" : "0",
                          "type" : "Literal"
                        },
                        "computed" : true,
                        "type" : "MemberExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "argument" : {
                      "callee" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "insert",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "p",
                        "type" : "Identifier"
                      }, {
                        "value" : null,
                        "raw" : "null",
                        "type" : "Literal"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ReturnStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : {
                  "test" : {
                    "operator" : "===",
                    "left" : {
                      "name" : "arguments.length",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "value" : 2,
                      "raw" : "2",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "consequent" : {
                    "body" : [ {
                      "declarations" : [ {
                        "id" : {
                          "name" : "p",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "object" : {
                            "name" : "arguments",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "value" : 0,
                            "raw" : "0",
                            "type" : "Literal"
                          },
                          "computed" : true,
                          "type" : "MemberExpression"
                        },
                        "type" : "VariableDeclarator"
                      }, {
                        "id" : {
                          "name" : "data",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "object" : {
                            "name" : "arguments",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "value" : 1,
                            "raw" : "1",
                            "type" : "Literal"
                          },
                          "computed" : true,
                          "type" : "MemberExpression"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    }, {
                      "test" : {
                        "operator" : "===",
                        "left" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "root",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "right" : {
                          "value" : null,
                          "raw" : "null",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "consequent" : {
                        "body" : [ {
                          "expression" : {
                            "operator" : "=",
                            "left" : {
                              "object" : {
                                "type" : "ThisExpression"
                              },
                              "property" : {
                                "name" : "root",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "right" : {
                              "callee" : {
                                "name" : "KdNode",
                                "type" : "Identifier"
                              },
                              "arguments" : [ {
                                "name" : "p",
                                "type" : "Identifier"
                              }, {
                                "name" : "data",
                                "type" : "Identifier"
                              } ],
                              "type" : "NewExpression"
                            },
                            "type" : "AssignmentExpression"
                          },
                          "type" : "ExpressionStatement"
                        }, {
                          "argument" : {
                            "object" : {
                              "type" : "ThisExpression"
                            },
                            "property" : {
                              "name" : "root",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "type" : "ReturnStatement"
                        } ],
                        "type" : "BlockStatement"
                      },
                      "alternate" : null,
                      "type" : "IfStatement"
                    }, {
                      "test" : {
                        "operator" : ">",
                        "left" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "tolerance",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "right" : {
                          "value" : "0",
                          "raw" : "0",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "consequent" : {
                        "body" : [ {
                          "declarations" : [ {
                            "id" : {
                              "name" : "matchNode",
                              "type" : "Identifier"
                            },
                            "init" : {
                              "callee" : {
                                "object" : {
                                  "type" : "ThisExpression"
                                },
                                "property" : {
                                  "name" : "findBestMatchNode",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              },
                              "arguments" : [ {
                                "name" : "p",
                                "type" : "Identifier"
                              } ],
                              "type" : "CallExpression"
                            },
                            "type" : "VariableDeclarator"
                          } ],
                          "kind" : "var",
                          "type" : "VariableDeclaration"
                        }, {
                          "test" : {
                            "operator" : "!==",
                            "left" : {
                              "name" : "matchNode",
                              "type" : "Identifier"
                            },
                            "right" : {
                              "value" : null,
                              "raw" : "null",
                              "type" : "Literal"
                            },
                            "type" : "BinaryExpression"
                          },
                          "consequent" : {
                            "body" : [ {
                              "expression" : {
                                "callee" : {
                                  "object" : {
                                    "name" : "matchNode",
                                    "type" : "Identifier"
                                  },
                                  "property" : {
                                    "name" : "increment",
                                    "type" : "Identifier"
                                  },
                                  "computed" : false,
                                  "type" : "MemberExpression"
                                },
                                "arguments" : [ ],
                                "type" : "CallExpression"
                              },
                              "type" : "ExpressionStatement"
                            }, {
                              "argument" : {
                                "name" : "matchNode",
                                "type" : "Identifier"
                              },
                              "type" : "ReturnStatement"
                            } ],
                            "type" : "BlockStatement"
                          },
                          "alternate" : null,
                          "type" : "IfStatement"
                        } ],
                        "type" : "BlockStatement"
                      },
                      "alternate" : null,
                      "type" : "IfStatement"
                    }, {
                      "argument" : {
                        "callee" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "insertExact",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "name" : "p",
                          "type" : "Identifier"
                        }, {
                          "name" : "data",
                          "type" : "Identifier"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "ReturnStatement"
                    } ],
                    "type" : "BlockStatement"
                  },
                  "alternate" : null,
                  "type" : "IfStatement"
                },
                "type" : "IfStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "query",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "test" : {
                  "operator" : "===",
                  "left" : {
                    "name" : "arguments.length",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "value" : 1,
                    "raw" : "1",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "declarations" : [ {
                      "id" : {
                        "name" : "queryEnv",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "object" : {
                          "name" : "arguments",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "value" : 0,
                          "raw" : "0",
                          "type" : "Literal"
                        },
                        "computed" : true,
                        "type" : "MemberExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "declarations" : [ {
                      "id" : {
                        "name" : "result",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "callee" : {
                          "name" : "ArrayList",
                          "type" : "Identifier"
                        },
                        "arguments" : [ ],
                        "type" : "NewExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "var",
                    "type" : "VariableDeclaration"
                  }, {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "query",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "queryEnv",
                        "type" : "Identifier"
                      }, {
                        "name" : "result",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "argument" : {
                      "name" : "result",
                      "type" : "Identifier"
                    },
                    "type" : "ReturnStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : {
                  "test" : {
                    "operator" : "===",
                    "left" : {
                      "name" : "arguments.length",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "value" : 2,
                      "raw" : "2",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "consequent" : {
                    "body" : [ {
                      "test" : {
                        "operator" : "&&",
                        "left" : {
                          "operator" : "instanceof",
                          "left" : {
                            "object" : {
                              "name" : "arguments",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "value" : 0,
                              "raw" : "0",
                              "type" : "Literal"
                            },
                            "computed" : true,
                            "type" : "MemberExpression"
                          },
                          "right" : {
                            "name" : "Envelope",
                            "type" : "Identifier"
                          },
                          "type" : "BinaryExpression"
                        },
                        "right" : {
                          "callee" : {
                            "name" : "hasInterface",
                            "type" : "Identifier"
                          },
                          "arguments" : [ {
                            "object" : {
                              "name" : "arguments",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "value" : 1,
                              "raw" : "1",
                              "type" : "Literal"
                            },
                            "computed" : true,
                            "type" : "MemberExpression"
                          }, {
                            "name" : "List",
                            "type" : "Identifier"
                          } ],
                          "type" : "CallExpression"
                        },
                        "type" : "LogicalExpression"
                      },
                      "consequent" : {
                        "body" : [ {
                          "declarations" : [ {
                            "id" : {
                              "name" : "queryEnv",
                              "type" : "Identifier"
                            },
                            "init" : {
                              "object" : {
                                "name" : "arguments",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "value" : 0,
                                "raw" : "0",
                                "type" : "Literal"
                              },
                              "computed" : true,
                              "type" : "MemberExpression"
                            },
                            "type" : "VariableDeclarator"
                          }, {
                            "id" : {
                              "name" : "result",
                              "type" : "Identifier"
                            },
                            "init" : {
                              "object" : {
                                "name" : "arguments",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "value" : 1,
                                "raw" : "1",
                                "type" : "Literal"
                              },
                              "computed" : true,
                              "type" : "MemberExpression"
                            },
                            "type" : "VariableDeclarator"
                          } ],
                          "kind" : "let",
                          "type" : "VariableDeclaration"
                        }, {
                          "expression" : {
                            "callee" : {
                              "object" : {
                                "type" : "ThisExpression"
                              },
                              "property" : {
                                "name" : "queryNode",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ {
                              "object" : {
                                "type" : "ThisExpression"
                              },
                              "property" : {
                                "name" : "root",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            }, {
                              "name" : "queryEnv",
                              "type" : "Identifier"
                            }, {
                              "value" : true,
                              "raw" : "true",
                              "type" : "Literal"
                            }, {
                              "properties" : [ {
                                "key" : {
                                  "name" : "interfaces_",
                                  "type" : "Identifier"
                                },
                                "value" : {
                                  "params" : [ ],
                                  "body" : {
                                    "body" : [ {
                                      "argument" : {
                                        "elements" : [ {
                                          "name" : "KdNodeVisitor",
                                          "type" : "Identifier"
                                        } ],
                                        "type" : "ArrayExpression"
                                      },
                                      "type" : "ReturnStatement"
                                    } ],
                                    "type" : "BlockStatement"
                                  },
                                  "generator" : false,
                                  "type" : "FunctionExpression"
                                },
                                "kind" : "init",
                                "computed" : false,
                                "method" : false,
                                "shorthand" : false,
                                "type" : "Property"
                              }, {
                                "key" : {
                                  "name" : "visit",
                                  "type" : "Identifier"
                                },
                                "value" : {
                                  "params" : [ {
                                    "name" : "node",
                                    "type" : "Identifier"
                                  } ],
                                  "body" : {
                                    "body" : [ {
                                      "expression" : {
                                        "callee" : {
                                          "object" : {
                                            "name" : "result",
                                            "type" : "Identifier"
                                          },
                                          "property" : {
                                            "name" : "add",
                                            "type" : "Identifier"
                                          },
                                          "computed" : false,
                                          "type" : "MemberExpression"
                                        },
                                        "arguments" : [ {
                                          "name" : "node",
                                          "type" : "Identifier"
                                        } ],
                                        "type" : "CallExpression"
                                      },
                                      "type" : "ExpressionStatement"
                                    } ],
                                    "type" : "BlockStatement"
                                  },
                                  "generator" : false,
                                  "type" : "FunctionExpression"
                                },
                                "kind" : "init",
                                "computed" : false,
                                "method" : false,
                                "shorthand" : false,
                                "type" : "Property"
                              } ],
                              "type" : "ObjectExpression"
                            } ],
                            "type" : "CallExpression"
                          },
                          "type" : "ExpressionStatement"
                        } ],
                        "type" : "BlockStatement"
                      },
                      "alternate" : {
                        "test" : {
                          "operator" : "&&",
                          "left" : {
                            "operator" : "instanceof",
                            "left" : {
                              "object" : {
                                "name" : "arguments",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "value" : 0,
                                "raw" : "0",
                                "type" : "Literal"
                              },
                              "computed" : true,
                              "type" : "MemberExpression"
                            },
                            "right" : {
                              "name" : "Envelope",
                              "type" : "Identifier"
                            },
                            "type" : "BinaryExpression"
                          },
                          "right" : {
                            "callee" : {
                              "name" : "hasInterface",
                              "type" : "Identifier"
                            },
                            "arguments" : [ {
                              "object" : {
                                "name" : "arguments",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "value" : 1,
                                "raw" : "1",
                                "type" : "Literal"
                              },
                              "computed" : true,
                              "type" : "MemberExpression"
                            }, {
                              "name" : "KdNodeVisitor",
                              "type" : "Identifier"
                            } ],
                            "type" : "CallExpression"
                          },
                          "type" : "LogicalExpression"
                        },
                        "consequent" : {
                          "body" : [ {
                            "declarations" : [ {
                              "id" : {
                                "name" : "queryEnv",
                                "type" : "Identifier"
                              },
                              "init" : {
                                "object" : {
                                  "name" : "arguments",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "value" : 0,
                                  "raw" : "0",
                                  "type" : "Literal"
                                },
                                "computed" : true,
                                "type" : "MemberExpression"
                              },
                              "type" : "VariableDeclarator"
                            }, {
                              "id" : {
                                "name" : "visitor",
                                "type" : "Identifier"
                              },
                              "init" : {
                                "object" : {
                                  "name" : "arguments",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "value" : 1,
                                  "raw" : "1",
                                  "type" : "Literal"
                                },
                                "computed" : true,
                                "type" : "MemberExpression"
                              },
                              "type" : "VariableDeclarator"
                            } ],
                            "kind" : "let",
                            "type" : "VariableDeclaration"
                          }, {
                            "expression" : {
                              "callee" : {
                                "object" : {
                                  "type" : "ThisExpression"
                                },
                                "property" : {
                                  "name" : "queryNode",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              },
                              "arguments" : [ {
                                "object" : {
                                  "type" : "ThisExpression"
                                },
                                "property" : {
                                  "name" : "root",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              }, {
                                "name" : "queryEnv",
                                "type" : "Identifier"
                              }, {
                                "value" : true,
                                "raw" : "true",
                                "type" : "Literal"
                              }, {
                                "name" : "visitor",
                                "type" : "Identifier"
                              } ],
                              "type" : "CallExpression"
                            },
                            "type" : "ExpressionStatement"
                          } ],
                          "type" : "BlockStatement"
                        },
                        "alternate" : null,
                        "type" : "IfStatement"
                      },
                      "type" : "IfStatement"
                    } ],
                    "type" : "BlockStatement"
                  },
                  "alternate" : null,
                  "type" : "IfStatement"
                },
                "type" : "IfStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "queryNode",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "currentNode",
              "type" : "Identifier"
            }, {
              "name" : "queryEnv",
              "type" : "Identifier"
            }, {
              "name" : "odd",
              "type" : "Identifier"
            }, {
              "name" : "visitor",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "test" : {
                  "operator" : "===",
                  "left" : {
                    "name" : "currentNode",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "argument" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "ReturnStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "min",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "var",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "max",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "var",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "discriminant",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "var",
                "type" : "VariableDeclaration"
              }, {
                "test" : {
                  "name" : "odd",
                  "type" : "Identifier"
                },
                "consequent" : {
                  "body" : [ {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "name" : "min",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "callee" : {
                          "object" : {
                            "name" : "queryEnv",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getMinX",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "name" : "max",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "callee" : {
                          "object" : {
                            "name" : "queryEnv",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getMaxX",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "name" : "discriminant",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "callee" : {
                          "object" : {
                            "name" : "currentNode",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getX",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : {
                  "body" : [ {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "name" : "min",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "callee" : {
                          "object" : {
                            "name" : "queryEnv",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getMinY",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "name" : "max",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "callee" : {
                          "object" : {
                            "name" : "queryEnv",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getMaxY",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "name" : "discriminant",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "callee" : {
                          "object" : {
                            "name" : "currentNode",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getY",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "type" : "IfStatement"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "searchLeft",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "operator" : "<",
                    "left" : {
                      "name" : "min",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "name" : "discriminant",
                      "type" : "Identifier"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "var",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "searchRight",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "operator" : "<=",
                    "left" : {
                      "name" : "discriminant",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "name" : "max",
                      "type" : "Identifier"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "var",
                "type" : "VariableDeclaration"
              }, {
                "test" : {
                  "name" : "searchLeft",
                  "type" : "Identifier"
                },
                "consequent" : {
                  "body" : [ {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "queryNode",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "callee" : {
                          "object" : {
                            "name" : "currentNode",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getLeft",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      }, {
                        "name" : "queryEnv",
                        "type" : "Identifier"
                      }, {
                        "operator" : "!",
                        "prefix" : true,
                        "argument" : {
                          "name" : "odd",
                          "type" : "Identifier"
                        },
                        "type" : "UnaryExpression"
                      }, {
                        "name" : "visitor",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "test" : {
                  "callee" : {
                    "object" : {
                      "name" : "queryEnv",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "contains",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "callee" : {
                      "object" : {
                        "name" : "currentNode",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "getCoordinate",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  } ],
                  "type" : "CallExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "name" : "visitor",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "visit",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "currentNode",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "test" : {
                  "name" : "searchRight",
                  "type" : "Identifier"
                },
                "consequent" : {
                  "body" : [ {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "queryNode",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "callee" : {
                          "object" : {
                            "name" : "currentNode",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getRight",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      }, {
                        "name" : "queryEnv",
                        "type" : "Identifier"
                      }, {
                        "operator" : "!",
                        "prefix" : true,
                        "argument" : {
                          "name" : "odd",
                          "type" : "Identifier"
                        },
                        "type" : "UnaryExpression"
                      }, {
                        "name" : "visitor",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "findBestMatchNode",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "p",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "visitor",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "name" : "BestMatchVisitor",
                      "type" : "Identifier"
                    },
                    "arguments" : [ {
                      "name" : "p",
                      "type" : "Identifier"
                    }, {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "tolerance",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    } ],
                    "type" : "NewExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "var",
                "type" : "VariableDeclaration"
              }, {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "query",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "callee" : {
                      "object" : {
                        "name" : "visitor",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "queryEnvelope",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  }, {
                    "name" : "visitor",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "argument" : {
                  "callee" : {
                    "object" : {
                      "name" : "visitor",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "getNode",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "isEmpty",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "test" : {
                  "operator" : "===",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "root",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "argument" : {
                    "value" : true,
                    "raw" : "true",
                    "type" : "Literal"
                  },
                  "type" : "ReturnStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "argument" : {
                  "value" : false,
                  "raw" : "false",
                  "type" : "Literal"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "insertExact",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "p",
              "type" : "Identifier"
            }, {
              "name" : "data",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "currentNode",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "root",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "var",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "leafNode",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "root",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "var",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "isOddLevel",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "value" : true,
                    "raw" : "true",
                    "type" : "Literal"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "var",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "isLessThan",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "value" : true,
                    "raw" : "true",
                    "type" : "Literal"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "var",
                "type" : "VariableDeclaration"
              }, {
                "test" : {
                  "operator" : "!==",
                  "left" : {
                    "name" : "currentNode",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "body" : {
                  "body" : [ {
                    "test" : {
                      "operator" : "!==",
                      "left" : {
                        "name" : "currentNode",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "value" : null,
                        "raw" : "null",
                        "type" : "Literal"
                      },
                      "type" : "BinaryExpression"
                    },
                    "consequent" : {
                      "body" : [ {
                        "declarations" : [ {
                          "id" : {
                            "name" : "isInTolerance",
                            "type" : "Identifier"
                          },
                          "init" : {
                            "operator" : "<=",
                            "left" : {
                              "callee" : {
                                "object" : {
                                  "name" : "p",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "name" : "distance",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              },
                              "arguments" : [ {
                                "callee" : {
                                  "object" : {
                                    "name" : "currentNode",
                                    "type" : "Identifier"
                                  },
                                  "property" : {
                                    "name" : "getCoordinate",
                                    "type" : "Identifier"
                                  },
                                  "computed" : false,
                                  "type" : "MemberExpression"
                                },
                                "arguments" : [ ],
                                "type" : "CallExpression"
                              } ],
                              "type" : "CallExpression"
                            },
                            "right" : {
                              "object" : {
                                "type" : "ThisExpression"
                              },
                              "property" : {
                                "name" : "tolerance",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "type" : "BinaryExpression"
                          },
                          "type" : "VariableDeclarator"
                        } ],
                        "kind" : "var",
                        "type" : "VariableDeclaration"
                      }, {
                        "test" : {
                          "name" : "isInTolerance",
                          "type" : "Identifier"
                        },
                        "consequent" : {
                          "body" : [ {
                            "expression" : {
                              "callee" : {
                                "object" : {
                                  "name" : "currentNode",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "name" : "increment",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              },
                              "arguments" : [ ],
                              "type" : "CallExpression"
                            },
                            "type" : "ExpressionStatement"
                          }, {
                            "argument" : {
                              "name" : "currentNode",
                              "type" : "Identifier"
                            },
                            "type" : "ReturnStatement"
                          } ],
                          "type" : "BlockStatement"
                        },
                        "alternate" : null,
                        "type" : "IfStatement"
                      } ],
                      "type" : "BlockStatement"
                    },
                    "alternate" : null,
                    "type" : "IfStatement"
                  }, {
                    "test" : {
                      "name" : "isOddLevel",
                      "type" : "Identifier"
                    },
                    "consequent" : {
                      "body" : [ {
                        "expression" : {
                          "operator" : "=",
                          "left" : {
                            "name" : "isLessThan",
                            "type" : "Identifier"
                          },
                          "right" : {
                            "operator" : "<",
                            "left" : {
                              "object" : {
                                "name" : "p",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "x",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "right" : {
                              "callee" : {
                                "object" : {
                                  "name" : "currentNode",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "name" : "getX",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              },
                              "arguments" : [ ],
                              "type" : "CallExpression"
                            },
                            "type" : "BinaryExpression"
                          },
                          "type" : "AssignmentExpression"
                        },
                        "type" : "ExpressionStatement"
                      } ],
                      "type" : "BlockStatement"
                    },
                    "alternate" : {
                      "body" : [ {
                        "expression" : {
                          "operator" : "=",
                          "left" : {
                            "name" : "isLessThan",
                            "type" : "Identifier"
                          },
                          "right" : {
                            "operator" : "<",
                            "left" : {
                              "object" : {
                                "name" : "p",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "y",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "right" : {
                              "callee" : {
                                "object" : {
                                  "name" : "currentNode",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "name" : "getY",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              },
                              "arguments" : [ ],
                              "type" : "CallExpression"
                            },
                            "type" : "BinaryExpression"
                          },
                          "type" : "AssignmentExpression"
                        },
                        "type" : "ExpressionStatement"
                      } ],
                      "type" : "BlockStatement"
                    },
                    "type" : "IfStatement"
                  }, {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "name" : "leafNode",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "name" : "currentNode",
                        "type" : "Identifier"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "test" : {
                      "name" : "isLessThan",
                      "type" : "Identifier"
                    },
                    "consequent" : {
                      "body" : [ {
                        "expression" : {
                          "operator" : "=",
                          "left" : {
                            "name" : "currentNode",
                            "type" : "Identifier"
                          },
                          "right" : {
                            "callee" : {
                              "object" : {
                                "name" : "currentNode",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "getLeft",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ ],
                            "type" : "CallExpression"
                          },
                          "type" : "AssignmentExpression"
                        },
                        "type" : "ExpressionStatement"
                      } ],
                      "type" : "BlockStatement"
                    },
                    "alternate" : {
                      "body" : [ {
                        "expression" : {
                          "operator" : "=",
                          "left" : {
                            "name" : "currentNode",
                            "type" : "Identifier"
                          },
                          "right" : {
                            "callee" : {
                              "object" : {
                                "name" : "currentNode",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "getRight",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ ],
                            "type" : "CallExpression"
                          },
                          "type" : "AssignmentExpression"
                        },
                        "type" : "ExpressionStatement"
                      } ],
                      "type" : "BlockStatement"
                    },
                    "type" : "IfStatement"
                  }, {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "name" : "isOddLevel",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "operator" : "!",
                        "prefix" : true,
                        "argument" : {
                          "name" : "isOddLevel",
                          "type" : "Identifier"
                        },
                        "type" : "UnaryExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "type" : "WhileStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "numberOfNodes",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "operator" : "+",
                    "left" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "numberOfNodes",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "right" : {
                      "value" : "1",
                      "raw" : "1",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "node",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "name" : "KdNode",
                      "type" : "Identifier"
                    },
                    "arguments" : [ {
                      "name" : "p",
                      "type" : "Identifier"
                    }, {
                      "name" : "data",
                      "type" : "Identifier"
                    } ],
                    "type" : "NewExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "var",
                "type" : "VariableDeclaration"
              }, {
                "test" : {
                  "name" : "isLessThan",
                  "type" : "Identifier"
                },
                "consequent" : {
                  "body" : [ {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "name" : "leafNode",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "setLeft",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "node",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : {
                  "body" : [ {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "name" : "leafNode",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "setRight",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "node",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "type" : "IfStatement"
              }, {
                "argument" : {
                  "name" : "node",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "interfaces_",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "elements" : [ ],
                  "type" : "ArrayExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "getClass",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "name" : "KdTree",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        } ],
        "type" : "ObjectExpression"
      } ],
      "type" : "CallExpression"
    },
    "type" : "ExpressionStatement"
  }, {
    "expression" : {
      "operator" : "=",
      "left" : {
        "object" : {
          "name" : "KdTree",
          "type" : "Identifier"
        },
        "property" : {
          "name" : "toCoordinates",
          "type" : "Identifier"
        },
        "computed" : false,
        "type" : "MemberExpression"
      },
      "right" : {
        "params" : [ ],
        "body" : {
          "body" : [ {
            "test" : {
              "operator" : "===",
              "left" : {
                "name" : "arguments.length",
                "type" : "Identifier"
              },
              "right" : {
                "value" : 1,
                "raw" : "1",
                "type" : "Literal"
              },
              "type" : "BinaryExpression"
            },
            "consequent" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "kdnodes",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "object" : {
                      "name" : "arguments",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "value" : 0,
                      "raw" : "0",
                      "type" : "Literal"
                    },
                    "computed" : true,
                    "type" : "MemberExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "argument" : {
                  "callee" : {
                    "object" : {
                      "name" : "KdTree",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "toCoordinates",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "kdnodes",
                    "type" : "Identifier"
                  }, {
                    "value" : false,
                    "raw" : "false",
                    "type" : "Literal"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "alternate" : {
              "test" : {
                "operator" : "===",
                "left" : {
                  "name" : "arguments.length",
                  "type" : "Identifier"
                },
                "right" : {
                  "value" : 2,
                  "raw" : "2",
                  "type" : "Literal"
                },
                "type" : "BinaryExpression"
              },
              "consequent" : {
                "body" : [ {
                  "declarations" : [ {
                    "id" : {
                      "name" : "kdnodes",
                      "type" : "Identifier"
                    },
                    "init" : {
                      "object" : {
                        "name" : "arguments",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "value" : 0,
                        "raw" : "0",
                        "type" : "Literal"
                      },
                      "computed" : true,
                      "type" : "MemberExpression"
                    },
                    "type" : "VariableDeclarator"
                  }, {
                    "id" : {
                      "name" : "includeRepeated",
                      "type" : "Identifier"
                    },
                    "init" : {
                      "object" : {
                        "name" : "arguments",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "value" : 1,
                        "raw" : "1",
                        "type" : "Literal"
                      },
                      "computed" : true,
                      "type" : "MemberExpression"
                    },
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "let",
                  "type" : "VariableDeclaration"
                }, {
                  "declarations" : [ {
                    "id" : {
                      "name" : "coord",
                      "type" : "Identifier"
                    },
                    "init" : {
                      "callee" : {
                        "name" : "CoordinateList",
                        "type" : "Identifier"
                      },
                      "arguments" : [ ],
                      "type" : "NewExpression"
                    },
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "var",
                  "type" : "VariableDeclaration"
                }, {
                  "init" : {
                    "declarations" : [ {
                      "id" : {
                        "name" : "it",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "callee" : {
                          "object" : {
                            "name" : "kdnodes",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "iterator",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "var",
                    "type" : "VariableDeclaration"
                  },
                  "test" : {
                    "callee" : {
                      "object" : {
                        "name" : "it",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "hasNext",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  },
                  "update" : null,
                  "body" : {
                    "body" : [ {
                      "declarations" : [ {
                        "id" : {
                          "name" : "node",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "callee" : {
                            "object" : {
                              "name" : "it",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "next",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ ],
                          "type" : "CallExpression"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "var",
                      "type" : "VariableDeclaration"
                    }, {
                      "declarations" : [ {
                        "id" : {
                          "name" : "count",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "test" : {
                            "name" : "includeRepeated",
                            "type" : "Identifier"
                          },
                          "alternate" : {
                            "value" : "1",
                            "raw" : "1",
                            "type" : "Literal"
                          },
                          "consequent" : {
                            "callee" : {
                              "object" : {
                                "name" : "node",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "getCount",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ ],
                            "type" : "CallExpression"
                          },
                          "type" : "ConditionalExpression"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "var",
                      "type" : "VariableDeclaration"
                    }, {
                      "init" : {
                        "declarations" : [ {
                          "id" : {
                            "name" : "i",
                            "type" : "Identifier"
                          },
                          "init" : {
                            "value" : "0",
                            "raw" : "0",
                            "type" : "Literal"
                          },
                          "type" : "VariableDeclarator"
                        } ],
                        "kind" : "var",
                        "type" : "VariableDeclaration"
                      },
                      "test" : {
                        "operator" : "<",
                        "left" : {
                          "name" : "i",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "name" : "count",
                          "type" : "Identifier"
                        },
                        "type" : "BinaryExpression"
                      },
                      "update" : {
                        "operator" : "++",
                        "prefix" : false,
                        "argument" : {
                          "name" : "i",
                          "type" : "Identifier"
                        },
                        "type" : "UnaryExpression"
                      },
                      "body" : {
                        "body" : [ {
                          "expression" : {
                            "callee" : {
                              "object" : {
                                "name" : "coord",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "add",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ {
                              "callee" : {
                                "object" : {
                                  "name" : "node",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "name" : "getCoordinate",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              },
                              "arguments" : [ ],
                              "type" : "CallExpression"
                            }, {
                              "value" : true,
                              "raw" : "true",
                              "type" : "Literal"
                            } ],
                            "type" : "CallExpression"
                          },
                          "type" : "ExpressionStatement"
                        } ],
                        "type" : "BlockStatement"
                      },
                      "type" : "ForStatement"
                    } ],
                    "type" : "BlockStatement"
                  },
                  "type" : "ForStatement"
                }, {
                  "argument" : {
                    "callee" : {
                      "object" : {
                        "name" : "coord",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "toCoordinateArray",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  },
                  "type" : "ReturnStatement"
                } ],
                "type" : "BlockStatement"
              },
              "alternate" : null,
              "type" : "IfStatement"
            },
            "type" : "IfStatement"
          } ],
          "type" : "BlockStatement"
        },
        "generator" : false,
        "type" : "FunctionExpression"
      },
      "type" : "AssignmentExpression"
    },
    "type" : "ExpressionStatement"
  }, {
    "id" : {
      "name" : "BestMatchVisitor",
      "type" : "Identifier"
    },
    "params" : [ ],
    "body" : {
      "body" : [ {
        "expression" : {
          "operator" : "=",
          "left" : {
            "object" : {
              "type" : "ThisExpression"
            },
            "property" : {
              "name" : "tolerance",
              "type" : "Identifier"
            },
            "computed" : false,
            "type" : "MemberExpression"
          },
          "right" : {
            "value" : null,
            "raw" : "null",
            "type" : "Literal"
          },
          "type" : "AssignmentExpression"
        },
        "type" : "ExpressionStatement"
      }, {
        "expression" : {
          "operator" : "=",
          "left" : {
            "object" : {
              "type" : "ThisExpression"
            },
            "property" : {
              "name" : "matchNode",
              "type" : "Identifier"
            },
            "computed" : false,
            "type" : "MemberExpression"
          },
          "right" : {
            "value" : null,
            "raw" : "null",
            "type" : "Literal"
          },
          "type" : "AssignmentExpression"
        },
        "type" : "ExpressionStatement"
      }, {
        "expression" : {
          "operator" : "=",
          "left" : {
            "object" : {
              "type" : "ThisExpression"
            },
            "property" : {
              "name" : "matchDist",
              "type" : "Identifier"
            },
            "computed" : false,
            "type" : "MemberExpression"
          },
          "right" : {
            "value" : "0.0",
            "raw" : "0.0",
            "type" : "Literal"
          },
          "type" : "AssignmentExpression"
        },
        "type" : "ExpressionStatement"
      }, {
        "expression" : {
          "operator" : "=",
          "left" : {
            "object" : {
              "type" : "ThisExpression"
            },
            "property" : {
              "name" : "p",
              "type" : "Identifier"
            },
            "computed" : false,
            "type" : "MemberExpression"
          },
          "right" : {
            "value" : null,
            "raw" : "null",
            "type" : "Literal"
          },
          "type" : "AssignmentExpression"
        },
        "type" : "ExpressionStatement"
      }, {
        "declarations" : [ {
          "id" : {
            "name" : "p",
            "type" : "Identifier"
          },
          "init" : {
            "object" : {
              "name" : "arguments",
              "type" : "Identifier"
            },
            "property" : {
              "value" : 0,
              "raw" : "0",
              "type" : "Literal"
            },
            "computed" : true,
            "type" : "MemberExpression"
          },
          "type" : "VariableDeclarator"
        }, {
          "id" : {
            "name" : "tolerance",
            "type" : "Identifier"
          },
          "init" : {
            "object" : {
              "name" : "arguments",
              "type" : "Identifier"
            },
            "property" : {
              "value" : 1,
              "raw" : "1",
              "type" : "Literal"
            },
            "computed" : true,
            "type" : "MemberExpression"
          },
          "type" : "VariableDeclarator"
        } ],
        "kind" : "let",
        "type" : "VariableDeclaration"
      }, {
        "expression" : {
          "operator" : "=",
          "left" : {
            "object" : {
              "type" : "ThisExpression"
            },
            "property" : {
              "name" : "p",
              "type" : "Identifier"
            },
            "computed" : false,
            "type" : "MemberExpression"
          },
          "right" : {
            "name" : "p",
            "type" : "Identifier"
          },
          "type" : "AssignmentExpression"
        },
        "type" : "ExpressionStatement"
      }, {
        "expression" : {
          "operator" : "=",
          "left" : {
            "object" : {
              "type" : "ThisExpression"
            },
            "property" : {
              "name" : "tolerance",
              "type" : "Identifier"
            },
            "computed" : false,
            "type" : "MemberExpression"
          },
          "right" : {
            "name" : "tolerance",
            "type" : "Identifier"
          },
          "type" : "AssignmentExpression"
        },
        "type" : "ExpressionStatement"
      } ],
      "type" : "BlockStatement"
    },
    "generator" : false,
    "type" : "FunctionDeclaration"
  }, {
    "expression" : {
      "callee" : {
        "name" : "extend",
        "type" : "Identifier"
      },
      "arguments" : [ {
        "object" : {
          "name" : "BestMatchVisitor",
          "type" : "Identifier"
        },
        "property" : {
          "name" : "prototype",
          "type" : "Identifier"
        },
        "computed" : false,
        "type" : "MemberExpression"
      }, {
        "properties" : [ {
          "key" : {
            "name" : "visit",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "node",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "dist",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "p",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "property" : {
                        "name" : "distance",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "callee" : {
                        "object" : {
                          "name" : "node",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "getCoordinate",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "var",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "isInTolerance",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "operator" : "<=",
                    "left" : {
                      "name" : "dist",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "tolerance",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "var",
                "type" : "VariableDeclaration"
              }, {
                "test" : {
                  "operator" : "!",
                  "prefix" : true,
                  "argument" : {
                    "name" : "isInTolerance",
                    "type" : "Identifier"
                  },
                  "type" : "UnaryExpression"
                },
                "consequent" : {
                  "argument" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "ReturnStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "update",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "value" : false,
                    "raw" : "false",
                    "type" : "Literal"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "var",
                "type" : "VariableDeclaration"
              }, {
                "test" : {
                  "operator" : "||",
                  "left" : {
                    "operator" : "||",
                    "left" : {
                      "operator" : "===",
                      "left" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "matchNode",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "right" : {
                        "value" : null,
                        "raw" : "null",
                        "type" : "Literal"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "operator" : "<",
                      "left" : {
                        "name" : "dist",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "matchDist",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "right" : {
                    "operator" : "&&",
                    "left" : {
                      "operator" : "&&",
                      "left" : {
                        "operator" : "!==",
                        "left" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "matchNode",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "right" : {
                          "value" : null,
                          "raw" : "null",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "right" : {
                        "operator" : "===",
                        "left" : {
                          "name" : "dist",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "matchDist",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "operator" : "<",
                      "left" : {
                        "callee" : {
                          "object" : {
                            "callee" : {
                              "object" : {
                                "name" : "node",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "getCoordinate",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ ],
                            "type" : "CallExpression"
                          },
                          "property" : {
                            "name" : "compareTo",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "callee" : {
                            "object" : {
                              "object" : {
                                "type" : "ThisExpression"
                              },
                              "property" : {
                                "name" : "matchNode",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "property" : {
                              "name" : "getCoordinate",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ ],
                          "type" : "CallExpression"
                        } ],
                        "type" : "CallExpression"
                      },
                      "right" : {
                        "value" : "1",
                        "raw" : "1",
                        "type" : "Literal"
                      },
                      "type" : "BinaryExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "expression" : {
                    "operator" : "=",
                    "left" : {
                      "name" : "update",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "value" : true,
                      "raw" : "true",
                      "type" : "Literal"
                    },
                    "type" : "AssignmentExpression"
                  },
                  "type" : "ExpressionStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "test" : {
                  "name" : "update",
                  "type" : "Identifier"
                },
                "consequent" : {
                  "body" : [ {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "matchNode",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "right" : {
                        "name" : "node",
                        "type" : "Identifier"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "matchDist",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "right" : {
                        "name" : "dist",
                        "type" : "Identifier"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "queryEnvelope",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "queryEnv",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "name" : "Envelope",
                      "type" : "Identifier"
                    },
                    "arguments" : [ {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "p",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    } ],
                    "type" : "NewExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "var",
                "type" : "VariableDeclaration"
              }, {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "name" : "queryEnv",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "expandBy",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "tolerance",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "argument" : {
                  "name" : "queryEnv",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "getNode",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "matchNode",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "interfaces_",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "elements" : [ {
                    "name" : "KdNodeVisitor",
                    "type" : "Identifier"
                  } ],
                  "type" : "ArrayExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "getClass",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "name" : "BestMatchVisitor",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        } ],
        "type" : "ObjectExpression"
      } ],
      "type" : "CallExpression"
    },
    "type" : "ExpressionStatement"
  }, {
    "expression" : {
      "operator" : "=",
      "left" : {
        "object" : {
          "name" : "KdTree",
          "type" : "Identifier"
        },
        "property" : {
          "name" : "BestMatchVisitor",
          "type" : "Identifier"
        },
        "computed" : false,
        "type" : "MemberExpression"
      },
      "right" : {
        "name" : "BestMatchVisitor",
        "type" : "Identifier"
      },
      "type" : "AssignmentExpression"
    },
    "type" : "ExpressionStatement"
  } ],
  "type" : "Program"
}