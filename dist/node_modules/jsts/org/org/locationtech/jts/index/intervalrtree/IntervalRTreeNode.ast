{
  "sourceType" : "module",
  "body" : [ {
    "specifiers" : [ {
      "local" : {
        "name" : "WKTWriter",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../io/WKTWriter'",
      "raw" : "'../../io/WKTWriter'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "Coordinate",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../geom/Coordinate'",
      "raw" : "'../../geom/Coordinate'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "Double",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../../java/lang/Double'",
      "raw" : "'../../../../../java/lang/Double'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "extend",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../../extend'",
      "raw" : "'../../../../../extend'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "Comparator",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../../java/util/Comparator'",
      "raw" : "'../../../../../java/util/Comparator'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "declaration" : {
      "id" : {
        "name" : "IntervalRTreeNode",
        "type" : "Identifier"
      },
      "params" : [ ],
      "body" : {
        "body" : [ {
          "expression" : {
            "operator" : "=",
            "left" : {
              "object" : {
                "type" : "ThisExpression"
              },
              "property" : {
                "name" : "min",
                "type" : "Identifier"
              },
              "computed" : false,
              "type" : "MemberExpression"
            },
            "right" : {
              "object" : {
                "name" : "Double",
                "type" : "Identifier"
              },
              "property" : {
                "name" : "POSITIVE_INFINITY",
                "type" : "Identifier"
              },
              "computed" : false,
              "type" : "MemberExpression"
            },
            "type" : "AssignmentExpression"
          },
          "type" : "ExpressionStatement"
        }, {
          "expression" : {
            "operator" : "=",
            "left" : {
              "object" : {
                "type" : "ThisExpression"
              },
              "property" : {
                "name" : "max",
                "type" : "Identifier"
              },
              "computed" : false,
              "type" : "MemberExpression"
            },
            "right" : {
              "object" : {
                "name" : "Double",
                "type" : "Identifier"
              },
              "property" : {
                "name" : "NEGATIVE_INFINITY",
                "type" : "Identifier"
              },
              "computed" : false,
              "type" : "MemberExpression"
            },
            "type" : "AssignmentExpression"
          },
          "type" : "ExpressionStatement"
        } ],
        "type" : "BlockStatement"
      },
      "generator" : false,
      "type" : "FunctionDeclaration"
    },
    "type" : "ExportDefaultDeclaration"
  }, {
    "expression" : {
      "callee" : {
        "name" : "extend",
        "type" : "Identifier"
      },
      "arguments" : [ {
        "object" : {
          "name" : "IntervalRTreeNode",
          "type" : "Identifier"
        },
        "property" : {
          "name" : "prototype",
          "type" : "Identifier"
        },
        "computed" : false,
        "type" : "MemberExpression"
      }, {
        "properties" : [ {
          "key" : {
            "name" : "getMin",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "min",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "intersects",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "queryMin",
              "type" : "Identifier"
            }, {
              "name" : "queryMax",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "test" : {
                  "operator" : "||",
                  "left" : {
                    "operator" : ">",
                    "left" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "min",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "right" : {
                      "name" : "queryMax",
                      "type" : "Identifier"
                    },
                    "type" : "BinaryExpression"
                  },
                  "right" : {
                    "operator" : "<",
                    "left" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "max",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "right" : {
                      "name" : "queryMin",
                      "type" : "Identifier"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "argument" : {
                    "value" : false,
                    "raw" : "false",
                    "type" : "Literal"
                  },
                  "type" : "ReturnStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "argument" : {
                  "value" : true,
                  "raw" : "true",
                  "type" : "Literal"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "getMax",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "max",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "toString",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "callee" : {
                    "object" : {
                      "name" : "WKTWriter",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "toLineString",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "callee" : {
                      "name" : "Coordinate",
                      "type" : "Identifier"
                    },
                    "arguments" : [ {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "min",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    }, {
                      "value" : "0",
                      "raw" : "0",
                      "type" : "Literal"
                    } ],
                    "type" : "NewExpression"
                  }, {
                    "callee" : {
                      "name" : "Coordinate",
                      "type" : "Identifier"
                    },
                    "arguments" : [ {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "max",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    }, {
                      "value" : "0",
                      "raw" : "0",
                      "type" : "Literal"
                    } ],
                    "type" : "NewExpression"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "interfaces_",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "elements" : [ ],
                  "type" : "ArrayExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "getClass",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "name" : "IntervalRTreeNode",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        } ],
        "type" : "ObjectExpression"
      } ],
      "type" : "CallExpression"
    },
    "type" : "ExpressionStatement"
  }, {
    "id" : {
      "name" : "NodeComparator",
      "type" : "Identifier"
    },
    "params" : [ ],
    "body" : {
      "body" : [ ],
      "type" : "BlockStatement"
    },
    "generator" : false,
    "type" : "FunctionDeclaration"
  }, {
    "expression" : {
      "callee" : {
        "name" : "extend",
        "type" : "Identifier"
      },
      "arguments" : [ {
        "object" : {
          "name" : "NodeComparator",
          "type" : "Identifier"
        },
        "property" : {
          "name" : "prototype",
          "type" : "Identifier"
        },
        "computed" : false,
        "type" : "MemberExpression"
      }, {
        "properties" : [ {
          "key" : {
            "name" : "compare",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "o1",
              "type" : "Identifier"
            }, {
              "name" : "o2",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "n1",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "name" : "o1",
                    "type" : "Identifier"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "var",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "n2",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "name" : "o2",
                    "type" : "Identifier"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "var",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "mid1",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "operator" : "/",
                    "left" : {
                      "operator" : "+",
                      "left" : {
                        "object" : {
                          "name" : "n1",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "min",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "right" : {
                        "object" : {
                          "name" : "n1",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "max",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "value" : "2",
                      "raw" : "2",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "var",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "mid2",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "operator" : "/",
                    "left" : {
                      "operator" : "+",
                      "left" : {
                        "object" : {
                          "name" : "n2",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "min",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "right" : {
                        "object" : {
                          "name" : "n2",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "max",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "value" : "2",
                      "raw" : "2",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "var",
                "type" : "VariableDeclaration"
              }, {
                "test" : {
                  "operator" : "<",
                  "left" : {
                    "name" : "mid1",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "mid2",
                    "type" : "Identifier"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "argument" : {
                    "operator" : "-",
                    "prefix" : true,
                    "argument" : {
                      "value" : "1",
                      "raw" : "1",
                      "type" : "Literal"
                    },
                    "type" : "UnaryExpression"
                  },
                  "type" : "ReturnStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "test" : {
                  "operator" : ">",
                  "left" : {
                    "name" : "mid1",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "mid2",
                    "type" : "Identifier"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "argument" : {
                    "value" : "1",
                    "raw" : "1",
                    "type" : "Literal"
                  },
                  "type" : "ReturnStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "argument" : {
                  "value" : "0",
                  "raw" : "0",
                  "type" : "Literal"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "interfaces_",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "elements" : [ {
                    "name" : "Comparator",
                    "type" : "Identifier"
                  } ],
                  "type" : "ArrayExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "getClass",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "name" : "NodeComparator",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        } ],
        "type" : "ObjectExpression"
      } ],
      "type" : "CallExpression"
    },
    "type" : "ExpressionStatement"
  }, {
    "expression" : {
      "operator" : "=",
      "left" : {
        "object" : {
          "name" : "IntervalRTreeNode",
          "type" : "Identifier"
        },
        "property" : {
          "name" : "NodeComparator",
          "type" : "Identifier"
        },
        "computed" : false,
        "type" : "MemberExpression"
      },
      "right" : {
        "name" : "NodeComparator",
        "type" : "Identifier"
      },
      "type" : "AssignmentExpression"
    },
    "type" : "ExpressionStatement"
  } ],
  "type" : "Program"
}